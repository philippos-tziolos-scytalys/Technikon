2023-07-25 09:43:23.573 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:23.573 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:23.581 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:23.581 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:23.583 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:23.585 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:23.585 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:23.590 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:23.590 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:23.591 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:24.549 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:24.550 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:24.557 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:24.557 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:24.558 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:24.560 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:24.560 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:24.568 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:24.568 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:24.569 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:25.655 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:25.656 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:25.661 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:25.661 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:25.662 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:25.664 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:25.664 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:25.669 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:25.669 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:25.669 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:26.522 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:26.522 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:26.525 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:26.525 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:26.526 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:26.527 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:26.527 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:26.532 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:26.532 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:26.533 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:26.981 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:26.981 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:26.984 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:26.984 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:26.985 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:26.986 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:26.986 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:26.992 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:26.992 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:26.993 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:27.145 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:27.145 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:27.148 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:27.148 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:27.148 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:27.150 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:27.150 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:27.155 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:27.155 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:27.156 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:27.330 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:27.331 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:27.334 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:27.335 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:27.335 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:27.337 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:27.337 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:27.342 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:27.342 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:27.343 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:27.655 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:27.656 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:27.659 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:27.659 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:27.659 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:27.661 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:27.662 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:27.665 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:27.665 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:27.666 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:27.832 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:27.832 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:27.836 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:27.836 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:27.836 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:27.838 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:27.838 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:27.843 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:27.843 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:27.844 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:28.034 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:28.034 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:28.038 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:28.038 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:28.039 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:28.040 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:28.040 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:28.044 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:28.045 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:28.045 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:28.220 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:28.220 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:28.223 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:28.223 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:28.223 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:43:28.225 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 09:43:28.225 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 09:43:28.229 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 09:43:28.229 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 09:43:28.230 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:52:48.458 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 09:52:48.458 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 09:52:48.465 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 09:52:48.465 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 09:52:48.465 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:52:48.467 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 09:52:48.467 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 09:52:48.470 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 09:52:48.470 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 09:52:48.470 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:52:48.472 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 09:52:48.472 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 09:52:48.476 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 09:52:48.476 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 09:52:48.476 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 09:52:48.477 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 09:52:48.477 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 09:52:48.479 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 09:52:48.479 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 09:52:48.480 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 10:00:25.991 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 10:00:25.991 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 10:00:25.997 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 10:00:25.997 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 10:00:25.998 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 10:00:25.999 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 10:00:25.999 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 10:00:26.005 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 10:00:26.005 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 10:00:26.006 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 10:41:16.387 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : OPTIONS "/api/auth/login", parameters={}
2023-07-25 10:41:16.388 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#login(LoginDto)
2023-07-25 10:41:16.388 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 10:41:16.390 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/login", parameters={}
2023-07-25 10:41:16.390 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#login(LoginDto)
2023-07-25 10:41:16.395 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [com.scytalys.technikon.dto.LoginDto@1a9dd46c]
2023-07-25 10:41:16.404 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 10:41:16.404 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["Login successful"]
2023-07-25 10:41:16.404 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 10:41:16.416 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 10:41:16.416 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 10:41:16.422 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 10:41:16.422 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 10:41:16.423 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 10:41:16.424 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 10:41:16.424 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 10:41:16.430 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 10:41:16.430 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 10:41:16.430 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 10:41:16.546 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 10:41:16.547 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 10:41:16.552 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 10:41:16.552 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 10:41:16.552 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 10:41:16.554 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 10:41:16.554 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 10:41:16.560 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 10:41:16.560 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 10:41:16.562 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 10:52:08.721 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : OPTIONS "/api/auth/register", parameters={}
2023-07-25 10:52:08.721 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 10:52:08.722 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 10:52:08.723 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 10:52:08.723 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 10:52:08.726 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=19990911, name=Kevin, lastname=Rosales, address=Zografou papagou 23, phon (truncated)...]
2023-07-25 10:52:08.740 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 10:52:08.740 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 10:52:08.741 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 10:52:23.149 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/login", parameters={}
2023-07-25 10:52:23.149 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#login(LoginDto)
2023-07-25 10:52:23.150 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [com.scytalys.technikon.dto.LoginDto@70423058]
2023-07-25 10:52:23.153 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 10:52:23.153 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["Login successful"]
2023-07-25 10:52:23.154 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 10:52:23.163 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 10:52:23.164 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 10:52:23.168 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 10:52:23.168 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 10:52:23.169 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 10:52:23.170 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 10:52:23.170 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 10:52:23.174 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 10:52:23.174 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 10:52:23.175 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 10:52:23.550 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 10:52:23.550 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 10:52:23.553 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 10:52:23.553 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 10:52:23.554 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 10:52:23.556 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 10:52:23.557 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 10:52:23.562 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 10:52:23.562 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 10:52:23.562 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 10:54:03.607 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/login", parameters={}
2023-07-25 10:54:03.607 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#login(LoginDto)
2023-07-25 10:54:03.608 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [com.scytalys.technikon.dto.LoginDto@4c28e16e]
2023-07-25 10:54:03.611 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 10:54:03.611 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["Invalid credentials"]
2023-07-25 10:54:03.612 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 401 UNAUTHORIZED
2023-07-25 10:54:05.654 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/login", parameters={}
2023-07-25 10:54:05.654 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#login(LoginDto)
2023-07-25 10:54:05.655 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [com.scytalys.technikon.dto.LoginDto@1aae4bfd]
2023-07-25 10:54:05.657 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 10:54:05.657 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["Invalid credentials"]
2023-07-25 10:54:05.658 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 401 UNAUTHORIZED
2023-07-25 11:02:58.248 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/login", parameters={}
2023-07-25 11:02:58.248 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#login(LoginDto)
2023-07-25 11:02:58.249 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [com.scytalys.technikon.dto.LoginDto@2143c306]
2023-07-25 11:02:58.255 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 11:02:58.255 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["Login successful"]
2023-07-25 11:02:58.255 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 11:02:58.264 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:02:58.264 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:02:58.270 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:02:58.270 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 11:02:58.271 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:02:58.272 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:02:58.272 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:02:58.276 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:02:58.276 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 11:02:58.276 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:02:58.649 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:02:58.649 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:02:58.655 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:02:58.655 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 11:02:58.655 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:02:58.659 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:02:58.660 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:02:58.665 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:02:58.665 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 11:02:58.665 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:07:00.746 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:07:00.746 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:07:00.750 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:07:00.751 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 11:07:00.751 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:07:00.753 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:07:00.753 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:07:00.757 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:07:00.757 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 11:07:00.759 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:09:55.636 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:09:55.636 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:09:55.640 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:09:55.640 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 11:09:55.641 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:09:55.642 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:09:55.642 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:09:55.645 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:09:55.645 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 11:09:55.647 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:10:29.972 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:10:29.972 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:10:29.977 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:10:29.977 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 11:10:29.978 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:10:29.979 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:10:29.979 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:10:29.983 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:10:29.983 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 11:10:29.984 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:17:39.718 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 11:17:39.719 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 11:17:39.726 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 11:17:39.726 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 11:17:39.727 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:17:39.728 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 11:17:39.728 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 11:17:39.733 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 11:17:39.733 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 11:17:39.733 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:17:39.735 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 11:17:39.735 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 11:17:39.738 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 11:17:39.738 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 11:17:39.738 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:17:39.740 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 11:17:39.740 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 11:17:39.742 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 11:17:39.743 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 11:17:39.743 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:18:05.582 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 11:18:05.583 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 11:18:05.587 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 11:18:05.587 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 11:18:05.587 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:21:19.385  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 11:27:15.611  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 11:27:15.650  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 25920 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 11:27:15.654 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 11:27:15.655  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 11:27:16.823  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 11:27:16.832  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 11:27:16.833  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 11:27:16.833  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 11:27:16.928  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 11:27:16.928  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 1235 ms
2023-07-25 11:27:17.098  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 11:27:17.177  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 11:27:17.180  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 11:27:17.323  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 11:27:17.453  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 11:27:17.826  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:27:17.834  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:27:17.835  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:27:17.907  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 11:27:18.743  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 11:27:19.097  WARN SCY-LP-005 - [           main] [gServletWebServerApplicationContext] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'propertyController' defined in file [C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes\com\scytalys\technikon\controller\PropertyController.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.scytalys.technikon.service.PropertyService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2023-07-25 11:27:19.098  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 11:27:19.138  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Stopping service [Tomcat]
2023-07-25 11:27:19.147  INFO SCY-LP-005 - [           main] [a.l.ConditionEvaluationReportLogger] : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-25 11:27:19.170 ERROR SCY-LP-005 - [           main] [.b.d.LoggingFailureAnalysisReporter] : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.scytalys.technikon.controller.PropertyController required a bean of type 'com.scytalys.technikon.service.PropertyService' that could not be found.


Action:

Consider defining a bean of type 'com.scytalys.technikon.service.PropertyService' in your configuration.

2023-07-25 11:28:21.802  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 11:28:21.834  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 10516 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 11:28:21.837 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 11:28:21.838  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 11:28:22.700  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 11:28:22.707  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 11:28:22.709  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 11:28:22.709  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 11:28:22.783  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 11:28:22.783  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 916 ms
2023-07-25 11:28:22.898  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 11:28:22.942  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 11:28:22.944  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 11:28:23.052  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 11:28:23.156  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 11:28:23.480  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:28:23.486  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:28:23.487  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:28:23.545  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 11:28:24.241  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 11:28:24.490  WARN SCY-LP-005 - [           main] [gServletWebServerApplicationContext] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'propertyController' defined in file [C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes\com\scytalys\technikon\controller\PropertyController.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.scytalys.technikon.service.PropertyService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2023-07-25 11:28:24.490  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 11:28:24.525  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Stopping service [Tomcat]
2023-07-25 11:28:24.533  INFO SCY-LP-005 - [           main] [a.l.ConditionEvaluationReportLogger] : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-25 11:28:24.550 ERROR SCY-LP-005 - [           main] [.b.d.LoggingFailureAnalysisReporter] : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.scytalys.technikon.controller.PropertyController required a bean of type 'com.scytalys.technikon.service.PropertyService' that could not be found.


Action:

Consider defining a bean of type 'com.scytalys.technikon.service.PropertyService' in your configuration.

2023-07-25 11:29:01.697  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 11:29:01.729  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 12460 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 11:29:01.733 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 11:29:01.734  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 11:29:02.577  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 11:29:02.583  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 11:29:02.584  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 11:29:02.585  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 11:29:02.655  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 11:29:02.655  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 890 ms
2023-07-25 11:29:02.770  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 11:29:02.826  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 11:29:02.828  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 11:29:02.944  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 11:29:03.051  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 11:29:03.331  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:29:03.337  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:29:03.338  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:29:03.391  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 11:29:04.062  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 11:29:04.333  WARN SCY-LP-005 - [           main] [gServletWebServerApplicationContext] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'propertyController' defined in file [C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes\com\scytalys\technikon\controller\PropertyController.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.scytalys.technikon.service.PropertyService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2023-07-25 11:29:04.334  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 11:29:04.369  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Stopping service [Tomcat]
2023-07-25 11:29:04.381  INFO SCY-LP-005 - [           main] [a.l.ConditionEvaluationReportLogger] : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-25 11:29:04.400 ERROR SCY-LP-005 - [           main] [.b.d.LoggingFailureAnalysisReporter] : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.scytalys.technikon.controller.PropertyController required a bean of type 'com.scytalys.technikon.service.PropertyService' that could not be found.


Action:

Consider defining a bean of type 'com.scytalys.technikon.service.PropertyService' in your configuration.

2023-07-25 11:29:26.164  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 11:29:26.194  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 32340 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 11:29:26.197 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 11:29:26.198  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 11:29:27.049  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 11:29:27.055  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 11:29:27.056  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 11:29:27.057  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 11:29:27.127  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 11:29:27.127  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 894 ms
2023-07-25 11:29:27.244  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 11:29:27.298  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 11:29:27.299  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 11:29:27.400  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 11:29:27.504  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 11:29:27.777  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:29:27.782  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:29:27.784  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:29:27.838  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 11:29:28.492  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 11:29:28.753  WARN SCY-LP-005 - [           main] [gServletWebServerApplicationContext] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'propertyController' defined in file [C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes\com\scytalys\technikon\controller\PropertyController.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.scytalys.technikon.service.PropertyService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2023-07-25 11:29:28.753  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 11:29:28.788  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Stopping service [Tomcat]
2023-07-25 11:29:28.797  INFO SCY-LP-005 - [           main] [a.l.ConditionEvaluationReportLogger] : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-25 11:29:28.813 ERROR SCY-LP-005 - [           main] [.b.d.LoggingFailureAnalysisReporter] : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.scytalys.technikon.controller.PropertyController required a bean of type 'com.scytalys.technikon.service.PropertyService' that could not be found.


Action:

Consider defining a bean of type 'com.scytalys.technikon.service.PropertyService' in your configuration.

2023-07-25 11:37:08.011  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 11:37:08.041  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 17396 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 11:37:08.044 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 11:37:08.045  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 11:37:08.971  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 11:37:08.977  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 11:37:08.978  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 11:37:08.978  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 11:37:09.053  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 11:37:09.054  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 974 ms
2023-07-25 11:37:09.181  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 11:37:09.237  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 11:37:09.239  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 11:37:09.350  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 11:37:09.455  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 11:37:09.720  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:37:09.725  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:37:09.727  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:37:09.781  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 11:37:10.485  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 11:37:11.078  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 11:37:11.151 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 11:37:11.217 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 28 mappings in 'requestMappingHandlerMapping'
2023-07-25 11:37:11.231 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 11:37:11.237 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 11:37:11.301  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 11:37:11.319  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 11:37:11.325  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.603 seconds (process running for 4.593)
2023-07-25 11:37:14.507  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 11:37:14.507  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 11:37:14.507 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 11:37:14.507 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 11:37:14.507 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 11:37:14.508 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6f8b1902
2023-07-25 11:37:14.508 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@67fdc1e9
2023-07-25 11:37:14.508 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 11:37:14.508  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 1 ms
2023-07-25 11:37:14.516 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:37:14.525 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:37:14.629 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:37:14.630 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 11:37:14.643 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:37:14.644 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:37:14.644 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:37:14.648 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:37:14.648 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 11:37:14.648 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:37:21.166 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 11:37:21.168 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 11:37:21.218 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 11:37:21.293 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 11:37:21.293 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 11:37:21.294 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 11:37:24.026 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:37:24.026 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:37:24.039 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:37:24.039 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 11:37:24.047 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:37:24.048 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 11:37:24.048 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 11:37:24.053 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 11:37:24.054 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 11:37:24.054 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 11:58:07.039  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 11:58:11.771  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 11:58:11.802  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 27928 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 11:58:11.806 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 11:58:11.807  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 11:58:12.646  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 11:58:12.652  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 11:58:12.654  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 11:58:12.654  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 11:58:12.721  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 11:58:12.721  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 880 ms
2023-07-25 11:58:12.831  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 11:58:12.880  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 11:58:12.881  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 11:58:12.984  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 11:58:13.081  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 11:58:13.348  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:58:13.355  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:58:13.357  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 11:58:13.409  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 11:58:14.051  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 11:58:14.638  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 11:58:14.709 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 11:58:14.776 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 29 mappings in 'requestMappingHandlerMapping'
2023-07-25 11:58:14.790 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 11:58:14.796 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 11:58:14.859  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 11:58:14.875  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 11:58:14.881  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.387 seconds (process running for 4.249)
2023-07-25 12:07:45.634  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 12:07:45.634  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 12:07:45.635 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 12:07:45.635 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 12:07:45.635 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 12:07:45.635 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6f8b1902
2023-07-25 12:07:45.635 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@67fdc1e9
2023-07-25 12:07:45.636 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 12:07:45.637  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 2 ms
2023-07-25 12:07:45.641 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:07:45.649 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:07:45.735 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:07:45.736 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 12:07:45.746 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:07:45.747 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:07:45.748 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:07:45.752 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:07:45.752 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 12:07:45.753 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:08:07.482 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:08:07.482 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:08:07.485 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:08:07.485 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 12:08:07.486 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:08:07.487 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:08:07.487 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:08:07.492 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:08:07.492 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 12:08:07.492 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:08:12.722 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 12:08:12.722 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 12:08:12.775 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 12:08:12.837 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 12:08:12.837 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 12:08:12.839 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 12:08:14.775 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:08:14.775 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:08:14.796 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:08:14.796 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 12:08:14.805 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:08:14.807 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:08:14.807 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:08:14.811 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:08:14.812 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 12:08:14.813 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:09:12.400 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : OPTIONS "/api/auth/login", parameters={}
2023-07-25 12:09:12.400 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#login(LoginDto)
2023-07-25 12:09:12.401 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 12:09:12.404 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/login", parameters={}
2023-07-25 12:09:12.404 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#login(LoginDto)
2023-07-25 12:09:12.406 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [com.scytalys.technikon.dto.LoginDto@11ee502c]
2023-07-25 12:09:12.411 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 12:09:12.411 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["Invalid credentials"]
2023-07-25 12:09:12.412 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 401 UNAUTHORIZED
2023-07-25 12:09:13.643 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/login", parameters={}
2023-07-25 12:09:13.645 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#login(LoginDto)
2023-07-25 12:09:13.645 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [com.scytalys.technikon.dto.LoginDto@6bb18656]
2023-07-25 12:09:13.648 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 12:09:13.648 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["Invalid credentials"]
2023-07-25 12:09:13.649 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 401 UNAUTHORIZED
2023-07-25 12:09:18.133 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/login", parameters={}
2023-07-25 12:09:18.133 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#login(LoginDto)
2023-07-25 12:09:18.134 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [com.scytalys.technikon.dto.LoginDto@67f75da5]
2023-07-25 12:09:18.139 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 12:09:18.139 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["Invalid credentials"]
2023-07-25 12:09:18.140 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 401 UNAUTHORIZED
2023-07-25 12:10:05.861 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : OPTIONS "/api/auth/register", parameters={}
2023-07-25 12:10:05.862 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 12:10:05.862 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 12:10:05.864 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 12:10:05.864 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 12:10:05.865 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=19990911, name=Kevin, lastname=Rosales, address=Zografou papagou 23, phon (truncated)...]
2023-07-25 12:10:05.872 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: com.scytalys.technikon.exception.ApiException: username already exists.
2023-07-25 12:10:05.872 ERROR SCY-LP-005 - [nio-8080-exec-6] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: com.scytalys.technikon.exception.ApiException: username already exists.] with root cause
com.scytalys.technikon.exception.ApiException: username already exists.
	at com.scytalys.technikon.service.impl.AuthServiceImpl.register(AuthServiceImpl.java:30)
	at com.scytalys.technikon.controller.AuthController.register(AuthController.java:22)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 12:10:05.878 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for POST "/error", parameters={}
2023-07-25 12:10:05.879 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 12:10:05.883 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 12:10:05.883 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 12:10:05 EEST 2023, status=500, error=Internal Server Error, path=/api/auth/re (truncated)...]
2023-07-25 12:10:05.889 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 12:10:27.589 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/login", parameters={}
2023-07-25 12:10:27.589 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#login(LoginDto)
2023-07-25 12:10:27.590 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [com.scytalys.technikon.dto.LoginDto@1703a36]
2023-07-25 12:10:27.592 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 12:10:27.592 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["Invalid credentials"]
2023-07-25 12:10:27.593 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 401 UNAUTHORIZED
2023-07-25 12:10:32.973 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 12:10:32.973 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 12:10:32.974 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=19990911, name=Kevin, lastname=Rosales, address=Zografou papagou 23, phon (truncated)...]
2023-07-25 12:10:32.988 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 12:10:32.988 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 12:10:32.988 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 12:10:34.941 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/login", parameters={}
2023-07-25 12:10:34.941 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#login(LoginDto)
2023-07-25 12:10:34.942 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [com.scytalys.technikon.dto.LoginDto@190b87c5]
2023-07-25 12:10:34.945 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 12:10:34.945 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["Login successful"]
2023-07-25 12:10:34.945 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 12:11:35.215 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/login", parameters={}
2023-07-25 12:11:35.215 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#login(LoginDto)
2023-07-25 12:11:35.216 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [com.scytalys.technikon.dto.LoginDto@6c6eca56]
2023-07-25 12:11:35.219 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 12:11:35.219 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["Login successful"]
2023-07-25 12:11:35.221 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 12:11:35.229 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:11:35.229 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:11:35.235 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:11:35.235 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 12:11:35.236 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:11:35.239 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:11:35.240 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:11:35.245 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:11:35.245 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 12:11:35.246 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:11:35.851 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:11:35.851 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:11:35.856 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:11:35.856 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 12:11:35.856 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:11:35.857 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:11:35.857 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:11:35.861 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:11:35.861 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 12:11:35.862 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:28:27.930 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:28:27.931 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:28:27.938 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:28:27.939 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 12:28:27.939 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:28:27.941 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:28:27.941 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:28:27.947 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:28:27.947 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 12:28:27.947 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:39:21.047 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:39:21.048 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:39:21.054 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:39:21.055 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 12:39:21.057 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:39:49.793 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:39:49.793 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:39:49.798 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:39:49.800 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 12:39:49.800 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:39:49.802 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:39:49.802 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:39:49.808 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:39:49.808 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 12:39:49.809 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:42:22.566 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:42:22.567 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:42:22.573 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:42:22.574 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 12:42:22.574 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:42:22.576 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:42:22.576 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:42:22.582 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:42:22.582 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 12:42:22.582 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:47:07.890  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 12:47:12.004  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 12:47:12.038  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 26904 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 12:47:12.047 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 12:47:12.049  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 12:47:12.996  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 12:47:13.004  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 12:47:13.005  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 12:47:13.006  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 12:47:13.082  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 12:47:13.082  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 1000 ms
2023-07-25 12:47:13.204  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 12:47:13.260  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 12:47:13.262  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 12:47:13.376  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 12:47:13.521  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 12:47:13.800  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 12:47:13.805  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 12:47:13.806  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 12:47:13.859  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 12:47:14.624  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 12:47:15.224  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 12:47:15.304 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 12:47:15.375 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 29 mappings in 'requestMappingHandlerMapping'
2023-07-25 12:47:15.393 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 12:47:15.400 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 12:47:15.472  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 12:47:15.488  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 12:47:15.494  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.812 seconds (process running for 4.779)
2023-07-25 12:47:27.297  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 12:47:32.734  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 12:47:32.780  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 27844 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 12:47:32.784 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 12:47:32.785  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 12:47:33.956  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 12:47:33.964  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 12:47:33.966  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 12:47:33.966  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 12:47:34.054  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 12:47:34.054  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 1220 ms
2023-07-25 12:47:34.196  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 12:47:34.257  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 12:47:34.259  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 12:47:34.388  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 12:47:34.521  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 12:47:34.893  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 12:47:34.900  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 12:47:34.901  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 12:47:34.981  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 12:47:35.921  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 12:47:36.663  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 12:47:36.754 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 12:47:36.831 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 29 mappings in 'requestMappingHandlerMapping'
2023-07-25 12:47:36.848 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 12:47:36.855 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 12:47:36.929  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 12:47:36.947  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 12:47:36.954  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 4.801 seconds (process running for 6.106)
2023-07-25 12:47:50.663  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 12:47:56.095  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 12:47:56.139  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 22032 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 12:47:56.143 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 12:47:56.145  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 12:47:57.315  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 12:47:57.324  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 12:47:57.326  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 12:47:57.326  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 12:47:57.417  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 12:47:57.417  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 1218 ms
2023-07-25 12:47:57.568  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 12:47:57.626  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 12:47:57.629  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 12:47:57.753  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 12:47:57.872  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 12:47:58.212  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 12:47:58.218  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 12:47:58.219  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 12:47:58.285  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 12:47:59.115  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 12:47:59.866  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 12:47:59.951 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 12:48:00.032 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 29 mappings in 'requestMappingHandlerMapping'
2023-07-25 12:48:00.048 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 12:48:00.057 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 12:48:00.155  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 12:48:00.176  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 12:48:00.184  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 4.514 seconds (process running for 5.748)
2023-07-25 12:48:23.639  INFO SCY-LP-005 - [nio-8080-exec-3] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 12:48:23.640  INFO SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 12:48:23.640 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 12:48:23.640 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 12:48:23.640 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 12:48:23.640 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2d12a71f
2023-07-25 12:48:23.640 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@6ac9742e
2023-07-25 12:48:23.640 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 12:48:23.640  INFO SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 0 ms
2023-07-25 12:48:23.647 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 12:48:23.653 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 12:48:23.734 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:48:23.735 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 12:48:23.747 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 12:48:42.949 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:48:42.949 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:48:42.959 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:48:42.960 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 12:48:42.961 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:48:42.963 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 12:48:42.963 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 12:48:42.968 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:48:42.968 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 12:48:42.969 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 12:52:57.693 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 12:52:57.693 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 12:52:57.748 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 12:52:57.818 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 12:52:57.818 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 12:52:57.819 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 12:53:13.212 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 12:53:13.212 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 12:53:13.226 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.m.HandlerMethod              ] : Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<com.scytalys.technikon.dto.PropertyDto> com.scytalys.technikon.controller.PropertyController.createProperty(com.scytalys.technikon.dto.PropertyDto): JSON parse error: Cannot construct instance of `com.scytalys.technikon.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
2023-07-25 12:53:13.228  WARN SCY-LP-005 - [io-8080-exec-10] [m.s.DefaultHandlerExceptionResolver] : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.scytalys.technikon.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)]
2023-07-25 12:53:13.228 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 400 BAD_REQUEST
2023-07-25 12:53:13.231 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for POST "/error", parameters={}
2023-07-25 12:53:13.231 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 12:53:13.236 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:53:13.236 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 12:53:13 EEST 2023, status=400, error=Bad Request, path=/api/property/create}]
2023-07-25 12:53:13.241 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 400
2023-07-25 12:53:21.439 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 12:53:21.439 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 12:53:21.439 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.m.HandlerMethod              ] : Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<com.scytalys.technikon.dto.PropertyDto> com.scytalys.technikon.controller.PropertyController.createProperty(com.scytalys.technikon.dto.PropertyDto): JSON parse error: Cannot construct instance of `com.scytalys.technikon.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
2023-07-25 12:53:21.440  WARN SCY-LP-005 - [nio-8080-exec-3] [m.s.DefaultHandlerExceptionResolver] : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.scytalys.technikon.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)]
2023-07-25 12:53:21.440 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 400 BAD_REQUEST
2023-07-25 12:53:21.440 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for POST "/error", parameters={}
2023-07-25 12:53:21.440 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 12:53:21.440 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:53:21.441 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 12:53:21 EEST 2023, status=400, error=Bad Request, path=/api/property/create}]
2023-07-25 12:53:21.441 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 400
2023-07-25 12:53:47.671 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 12:53:47.671 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 12:53:47.672 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.m.HandlerMethod              ] : Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<com.scytalys.technikon.dto.PropertyDto> com.scytalys.technikon.controller.PropertyController.createProperty(com.scytalys.technikon.dto.PropertyDto): JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name
2023-07-25 12:53:47.672  WARN SCY-LP-005 - [nio-8080-exec-4] [m.s.DefaultHandlerExceptionResolver] : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name]
2023-07-25 12:53:47.672 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 400 BAD_REQUEST
2023-07-25 12:53:47.672 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for POST "/error", parameters={}
2023-07-25 12:53:47.672 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 12:53:47.673 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:53:47.673 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 12:53:47 EEST 2023, status=400, error=Bad Request, path=/api/property/create}]
2023-07-25 12:53:47.673 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 400
2023-07-25 12:54:15.434 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 12:54:15.434 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 12:54:15.438 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 12:54:15.452 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:54:15.452 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 12:54:15.453 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 12:55:51.242 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 12:55:51.243 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 12:55:51.243 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 12:55:51.250 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:55:51.250 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 12:55:51.251 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 12:56:47.888 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 12:56:47.890 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 12:56:47.891 DEBUG SCY-LP-005 - [io-8080-exec-10] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 12:56:47.900 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:56:47.900 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 12:56:47.903 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 12:59:25.286 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 12:59:25.286 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 12:59:25.302 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 12:59:25.302 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[BaseModel(id=1), BaseModel(id=2), BaseModel(id=3)]]
2023-07-25 12:59:25.329  WARN SCY-LP-005 - [nio-8080-exec-2] [m.s.DefaultHandlerExceptionResolver] : Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:581)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:548)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:221)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1341)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1152)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 12:59:25.330 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-07-25 12:59:25.330 ERROR SCY-LP-005 - [nio-8080-exec-2] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError
	at com.fasterxml.jackson.core.JacksonException.<init>(JacksonException.java:26)
	at com.fasterxml.jackson.core.JsonProcessingException.<init>(JsonProcessingException.java:25)
	at com.fasterxml.jackson.databind.DatabindException.<init>(DatabindException.java:22)
	at com.fasterxml.jackson.databind.DatabindException.<init>(DatabindException.java:34)
	at com.fasterxml.jackson.databind.JsonMappingException.<init>(JsonMappingException.java:247)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:787)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
2023-07-25 12:59:25.337 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : "INCLUDE" dispatch for GET "/error", parameters={}
2023-07-25 12:59:25.338 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 12:59:25.338 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Found 'Content-Type:application/json' in response
2023-07-25 12:59:25.338 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 12:59:25 EEST 2023, status=200, error=OK, path=/api/property/allproperties}]
2023-07-25 12:59:25.339 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Exiting from "INCLUDE" dispatch, status 200
2023-07-25 13:02:11.403  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:02:15.141  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:02:15.171  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 27732 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:02:15.174 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:02:15.175  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:02:15.999  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:02:16.005  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:02:16.007  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:02:16.007  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:02:16.077  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:02:16.078  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 875 ms
2023-07-25 13:02:16.184  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:02:16.229  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:02:16.231  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:02:16.333  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:02:16.429  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:02:16.722  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:02:16.729  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:02:16.730  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:02:16.783  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:02:17.429  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:02:18.024  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:02:18.103 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:02:18.169 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 29 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:02:18.183 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:02:18.188 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:02:18.253  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:02:18.269  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:02:18.275  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.411 seconds (process running for 4.202)
2023-07-25 13:02:22.071  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:02:22.072  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:02:22.072 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:02:22.072 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:02:22.072 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:02:22.072 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7a273fd7
2023-07-25 13:02:22.072 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@348c00d9
2023-07-25 13:02:22.073 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:02:22.073  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 1 ms
2023-07-25 13:02:22.079 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 13:02:22.094 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 13:02:22.179 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:02:22.179 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 13:02:22.192 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 13:02:34.447 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 13:02:34.447 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 13:02:34.496 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 13:02:34.564 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 13:02:34.564 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 13:02:34.565 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:02:43.579 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:02:43.579 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:02:43.595 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:02:43.610 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:02:43.610 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:02:43.615 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:02:59.726 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 13:02:59.726 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 13:02:59.741 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:02:59.741 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 13:02:59.773  WARN SCY-LP-005 - [nio-8080-exec-5] [m.s.DefaultHandlerExceptionResolver] : Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:581)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:548)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:221)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1341)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1152)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:02:59.773 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-07-25 13:02:59.773 ERROR SCY-LP-005 - [nio-8080-exec-5] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1012)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
2023-07-25 13:02:59.782 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : "INCLUDE" dispatch for GET "/error", parameters={}
2023-07-25 13:02:59.783 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:02:59.785 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Found 'Content-Type:application/json' in response
2023-07-25 13:02:59.786 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:02:59 EEST 2023, status=200, error=OK, path=/api/property/allproperties}]
2023-07-25 13:02:59.791 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Exiting from "INCLUDE" dispatch, status 200
2023-07-25 13:06:12.439 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update", parameters={}
2023-07-25 13:06:12.440 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updateProperty(PropertyDto)
2023-07-25 13:06:12.440 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:06:12.445 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-07-25 13:06:12.445 ERROR SCY-LP-005 - [nio-8080-exec-6] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:204)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy143.findById(Unknown Source)
	at com.scytalys.technikon.service.impl.PropertyServiceImpl.updateProperty(PropertyServiceImpl.java:30)
	at com.scytalys.technikon.controller.PropertyController.updateProperty(PropertyController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:06:12.445 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for PUT "/error", parameters={}
2023-07-25 13:06:12.446 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:06:12.446 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:06:12.446 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:06:12 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 13:06:12.447 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:06:30.615 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update", parameters={}
2023-07-25 13:06:30.615 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updateProperty(PropertyDto)
2023-07-25 13:06:30.615 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:06:30.617 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-07-25 13:06:30.617 ERROR SCY-LP-005 - [nio-8080-exec-8] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:204)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy143.findById(Unknown Source)
	at com.scytalys.technikon.service.impl.PropertyServiceImpl.updateProperty(PropertyServiceImpl.java:30)
	at com.scytalys.technikon.controller.PropertyController.updateProperty(PropertyController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:06:30.617 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for PUT "/error", parameters={}
2023-07-25 13:06:30.617 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:06:30.618 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:06:30.618 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:06:30 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 13:06:30.618 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:07:24.526  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:07:28.264  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:07:28.293  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 26768 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:07:28.296 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:07:28.297  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:07:29.133  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:07:29.140  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:07:29.142  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:07:29.143  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:07:29.212  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:07:29.213  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 882 ms
2023-07-25 13:07:29.321  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:07:29.370  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:07:29.372  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:07:29.478  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:07:29.585  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:07:29.856  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:07:29.861  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:07:29.862  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:07:29.912  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:07:30.556  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:07:31.117  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:07:31.191 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:07:31.259 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 29 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:07:31.273 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:07:31.279 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:07:31.341  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:07:31.358  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:07:31.365  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.413 seconds (process running for 4.321)
2023-07-25 13:07:35.690  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:07:35.690  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:07:35.691 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:07:35.691 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:07:35.691 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:07:35.691 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6f8b1902
2023-07-25 13:07:35.691 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@67fdc1e9
2023-07-25 13:07:35.692 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:07:35.692  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 2 ms
2023-07-25 13:07:35.698 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 13:07:35.707 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 13:07:35.782 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 13:07:35.908 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 13:07:35.909 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 13:07:35.914 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:07:38.334 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:07:38.334 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:07:38.353 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:07:38.368 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:07:38.369 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:07:38.375 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:07:43.940 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update", parameters={}
2023-07-25 13:07:43.940 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updateProperty(PropertyDto)
2023-07-25 13:07:43.941 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:07:43.946 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-07-25 13:07:43.946 ERROR SCY-LP-005 - [nio-8080-exec-4] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:204)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy143.findById(Unknown Source)
	at com.scytalys.technikon.service.impl.PropertyServiceImpl.updateProperty(PropertyServiceImpl.java:30)
	at com.scytalys.technikon.controller.PropertyController.updateProperty(PropertyController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:07:43.952 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for PUT "/error", parameters={}
2023-07-25 13:07:43.952 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:07:43.955 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:07:43.955 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:07:43 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 13:07:43.960 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:08:45.674  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:08:49.220  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:08:49.247  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 23252 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:08:49.250 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:08:49.251  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:08:50.097  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:08:50.104  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:08:50.105  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:08:50.105  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:08:50.176  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:08:50.176  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 893 ms
2023-07-25 13:08:50.293  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:08:50.344  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:08:50.346  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:08:50.447  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:08:50.545  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:08:50.822  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:08:50.826  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:08:50.828  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:08:50.879  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:08:51.525  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:08:52.075  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:08:52.151 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:08:52.218 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 29 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:08:52.231 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:08:52.238 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:08:52.298  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:08:52.313  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:08:52.320  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.373 seconds (process running for 4.147)
2023-07-25 13:09:03.481  INFO SCY-LP-005 - [nio-8080-exec-2] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:09:03.481  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:09:03.481 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:09:03.481 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:09:03.481 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:09:03.482 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4df9df06
2023-07-25 13:09:03.483 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@2e1c3b8f
2023-07-25 13:09:03.483 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:09:03.483  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 2 ms
2023-07-25 13:09:03.489 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:09:03.496 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:09:03.563 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:09:03.568 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: jakarta.servlet.ServletException: Handler dispatch failed: java.lang.NoSuchMethodError: 'com.scytalys.technikon.domain.User com.scytalys.technikon.dto.PropertyDto.getUser()'
2023-07-25 13:09:03.569 ERROR SCY-LP-005 - [nio-8080-exec-2] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed: java.lang.NoSuchMethodError: 'com.scytalys.technikon.domain.User com.scytalys.technikon.dto.PropertyDto.getUser()'] with root cause
java.lang.NoSuchMethodError: 'com.scytalys.technikon.domain.User com.scytalys.technikon.dto.PropertyDto.getUser()'
	at com.scytalys.technikon.mapper.PropertyMapperImpl.propertyDtoToProperty(PropertyMapperImpl.java:34)
	at com.scytalys.technikon.controller.PropertyController.createProperty(PropertyController.java:29)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:09:03.573 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for POST "/error", parameters={}
2023-07-25 13:09:03.574 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:09:03.584 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:09:03.584 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:09:03 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 13:09:03.596 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:09:47.947  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:09:50.302  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:09:50.331  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 27612 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:09:50.334 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:09:50.335  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:09:51.189  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:09:51.195  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:09:51.196  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:09:51.196  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:09:51.266  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:09:51.266  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 897 ms
2023-07-25 13:09:51.380  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:09:51.431  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:09:51.433  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:09:51.539  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:09:51.638  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:09:51.911  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:09:51.915  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:09:51.916  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:09:51.968  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:09:52.627  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:09:53.178  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:09:53.252 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:09:53.318 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 29 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:09:53.331 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:09:53.336 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:09:53.402  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:09:53.419  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:09:53.426  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.43 seconds (process running for 4.412)
2023-07-25 13:09:57.623  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:09:57.624  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:09:57.624 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:09:57.624 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:09:57.624 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:09:57.624 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@38c840fb
2023-07-25 13:09:57.624 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@5fe08
2023-07-25 13:09:57.624 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:09:57.624  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 0 ms
2023-07-25 13:09:57.630 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:09:57.639 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:09:57.709 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:09:57.777 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:09:57.778 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:09:57.786 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:10:04.552 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update", parameters={}
2023-07-25 13:10:04.552 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updateProperty(PropertyDto)
2023-07-25 13:10:04.553 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:10:04.559 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-07-25 13:10:04.560 ERROR SCY-LP-005 - [nio-8080-exec-3] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:204)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy143.findById(Unknown Source)
	at com.scytalys.technikon.service.impl.PropertyServiceImpl.updateProperty(PropertyServiceImpl.java:30)
	at com.scytalys.technikon.controller.PropertyController.updateProperty(PropertyController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:10:04.564 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for PUT "/error", parameters={}
2023-07-25 13:10:04.564 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:10:04.569 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:10:04.569 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:10:04 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 13:10:04.575 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:11:52.210  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:11:56.001  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:11:56.033  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 30024 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:11:56.037 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:11:56.039  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:11:56.989  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:11:56.995  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:11:56.997  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:11:56.997  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:11:57.068  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:11:57.068  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 991 ms
2023-07-25 13:11:57.179  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:11:57.228  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:11:57.229  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:11:57.331  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:11:57.429  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:11:57.703  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:11:57.708  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:11:57.709  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:11:57.764  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:11:58.429  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:11:58.975  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:11:59.052 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:11:59.122 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 29 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:11:59.141 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:11:59.148 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:11:59.216  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:11:59.232  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:11:59.239  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.518 seconds (process running for 4.314)
2023-07-25 13:12:02.174  INFO SCY-LP-005 - [nio-8080-exec-2] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:12:02.175  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:12:02.175 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:12:02.175 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:12:02.175 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:12:02.175 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@fbc1de9
2023-07-25 13:12:02.175 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@97e9568
2023-07-25 13:12:02.176 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:12:02.176  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 1 ms
2023-07-25 13:12:02.182 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:12:02.188 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:12:02.257 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:12:02.323 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:12:02.324 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:12:02.332 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:12:15.242 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update", parameters={}
2023-07-25 13:12:15.242 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updateProperty(PropertyDto)
2023-07-25 13:12:15.243 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:12:15.249 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-07-25 13:12:15.249 ERROR SCY-LP-005 - [nio-8080-exec-3] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:204)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy143.findById(Unknown Source)
	at com.scytalys.technikon.service.impl.PropertyServiceImpl.updateProperty(PropertyServiceImpl.java:30)
	at com.scytalys.technikon.controller.PropertyController.updateProperty(PropertyController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:12:15.253 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for PUT "/error", parameters={}
2023-07-25 13:12:15.254 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:12:15.259 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:12:15.260 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:12:15 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 13:12:15.265 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:13:49.929 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 13:13:49.929 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 13:13:49.990 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:13:49.990 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 13:13:49.991 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 13:16:28.803  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:16:32.532  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:16:32.559  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 27156 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:16:32.562 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:16:32.563  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:16:33.380  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:16:33.386  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:16:33.387  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:16:33.387  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:16:33.456  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:16:33.456  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 866 ms
2023-07-25 13:16:33.563  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:16:33.607  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:16:33.609  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:16:33.715  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:16:33.818  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:16:34.090  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:16:34.095  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:16:34.097  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:16:34.147  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:16:34.796  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:16:35.341  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:16:35.415 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:16:35.481 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 29 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:16:35.494 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:16:35.500 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:16:35.560  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:16:35.576  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:16:35.582  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.332 seconds (process running for 4.113)
2023-07-25 13:16:44.095  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:16:44.096  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:16:44.096 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:16:44.096 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:16:44.096 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:16:44.096 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1b61a646
2023-07-25 13:16:44.096 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@4e7bf371
2023-07-25 13:16:44.096 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:16:44.096  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 0 ms
2023-07-25 13:16:44.101 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:16:44.109 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:16:44.174 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:16:44.239 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:16:44.240 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:16:44.248 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:16:46.815 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 13:16:46.816 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 13:16:46.884 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:16:46.884 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 13:16:46.885 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 13:16:49.139 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update", parameters={}
2023-07-25 13:16:49.139 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updateProperty(PropertyDto)
2023-07-25 13:16:49.140 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:16:49.145 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-07-25 13:16:49.145 ERROR SCY-LP-005 - [nio-8080-exec-4] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:204)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy143.findById(Unknown Source)
	at com.scytalys.technikon.service.impl.PropertyServiceImpl.updateProperty(PropertyServiceImpl.java:30)
	at com.scytalys.technikon.controller.PropertyController.updateProperty(PropertyController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:16:49.149 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for PUT "/error", parameters={}
2023-07-25 13:16:49.150 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:16:49.153 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:16:49.154 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:16:49 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 13:16:49.158 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:19:13.511 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update", parameters={}
2023-07-25 13:19:13.512 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updateProperty(PropertyDto)
2023-07-25 13:19:13.512 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:19:13.514 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-07-25 13:19:13.514 ERROR SCY-LP-005 - [nio-8080-exec-6] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:204)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy143.findById(Unknown Source)
	at com.scytalys.technikon.service.impl.PropertyServiceImpl.updateProperty(PropertyServiceImpl.java:30)
	at com.scytalys.technikon.controller.PropertyController.updateProperty(PropertyController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:19:13.515 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for PUT "/error", parameters={}
2023-07-25 13:19:13.515 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:19:13.516 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:19:13.516 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:19:13 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 13:19:13.516 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:20:02.875  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:20:06.791  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:20:06.820  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 22032 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:20:06.822 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:20:06.823  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:20:07.686  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:20:07.692  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:20:07.693  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:20:07.693  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:20:07.763  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:20:07.764  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 910 ms
2023-07-25 13:20:07.879  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:20:07.924  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:20:07.926  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:20:08.031  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:20:08.131  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:20:08.399  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:20:08.404  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:20:08.406  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:20:08.458  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:20:09.092  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:20:09.652  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:20:09.722 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:20:09.784 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 29 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:20:09.797 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:20:09.803 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:20:09.865  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:20:09.886  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:20:09.892  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.393 seconds (process running for 4.206)
2023-07-25 13:20:16.535  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:20:16.535  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:20:16.536 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:20:16.536 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:20:16.536 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:20:16.536 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2c914aa3
2023-07-25 13:20:16.536 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@33a38f07
2023-07-25 13:20:16.536 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:20:16.536  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 0 ms
2023-07-25 13:20:16.546 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:20:16.554 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:20:16.621 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:20:16.687 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:20:16.688 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:20:16.696 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:20:21.052 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 13:20:21.052 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 13:20:21.115 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:20:21.115 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 13:20:21.117 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 13:20:28.527 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update/1", parameters={}
2023-07-25 13:20:28.527 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updateProperty(PropertyDto)
2023-07-25 13:20:28.528 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:20:28.533 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-07-25 13:20:28.533 ERROR SCY-LP-005 - [nio-8080-exec-4] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:204)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy143.findById(Unknown Source)
	at com.scytalys.technikon.service.impl.PropertyServiceImpl.updateProperty(PropertyServiceImpl.java:30)
	at com.scytalys.technikon.controller.PropertyController.updateProperty(PropertyController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:20:28.537 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for PUT "/error", parameters={}
2023-07-25 13:20:28.537 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:20:28.541 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:20:28.541 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:20:28 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 13:20:28.548 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:21:54.824  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:21:59.324  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:21:59.357  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 11940 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:21:59.361 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:21:59.362  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:22:00.204  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:22:00.211  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:22:00.213  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:22:00.213  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:22:00.282  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:22:00.282  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 886 ms
2023-07-25 13:22:00.395  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:22:00.438  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:22:00.440  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:22:00.543  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:22:00.643  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:22:00.915  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:22:00.924  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:22:00.924  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:22:00.944 ERROR SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Failed to initialize JPA EntityManagerFactory: Collection 'com.scytalys.technikon.domain.User.properties' is 'mappedBy' a property named 'user' which does not exist in the target entity 'com.scytalys.technikon.domain.Property'
2023-07-25 13:22:00.945  WARN SCY-LP-005 - [           main] [gServletWebServerApplicationContext] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.scytalys.technikon.domain.User.properties' is 'mappedBy' a property named 'user' which does not exist in the target entity 'com.scytalys.technikon.domain.Property'
2023-07-25 13:22:00.960  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Stopping service [Tomcat]
2023-07-25 13:22:00.968  INFO SCY-LP-005 - [           main] [a.l.ConditionEvaluationReportLogger] : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-25 13:22:00.981 ERROR SCY-LP-005 - [           main] [o.s.b.SpringApplication            ] : Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.scytalys.technikon.domain.User.properties' is 'mappedBy' a property named 'user' which does not exist in the target entity 'com.scytalys.technikon.domain.Property'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.scytalys.technikon.TechnikonApplication.main(TechnikonApplication.java:10)
Caused by: org.hibernate.AnnotationException: Collection 'com.scytalys.technikon.domain.User.properties' is 'mappedBy' a property named 'user' which does not exist in the target entity 'com.scytalys.technikon.domain.Property'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1568)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1582)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1543)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1534)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1857)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1814)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:328)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 16 more
2023-07-25 13:22:18.143  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:22:18.173  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 18968 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:22:18.177 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:22:18.178  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:22:19.008  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:22:19.015  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:22:19.015  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:22:19.017  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:22:19.084  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:22:19.084  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 878 ms
2023-07-25 13:22:19.195  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:22:19.248  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:22:19.250  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:22:19.356  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:22:19.458  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:22:19.728  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:22:19.733  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:22:19.734  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:22:19.786  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:22:20.447  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:22:20.989  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:22:21.061 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:22:21.129 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 29 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:22:21.141 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:22:21.147 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:22:21.207  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:22:21.223  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:22:21.230  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.373 seconds (process running for 4.208)
2023-07-25 13:22:49.442  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:22:49.442  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:22:49.442 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:22:49.442 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:22:49.442 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:22:49.444 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6f8b1902
2023-07-25 13:22:49.444 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@67fdc1e9
2023-07-25 13:22:49.444 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:22:49.444  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 2 ms
2023-07-25 13:22:49.449 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:22:49.457 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:22:49.524 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:22:49.591 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:22:49.592 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:22:49.601 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:23:19.075  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:23:22.881  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:23:22.914  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 22768 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:23:22.917 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:23:22.918  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:23:23.813  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:23:23.819  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:23:23.821  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:23:23.821  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:23:23.891  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:23:23.891  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 939 ms
2023-07-25 13:23:24.016  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:23:24.066  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:23:24.067  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:23:24.186  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:23:24.309  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:23:24.627  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:23:24.633  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:23:24.635  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:23:24.699  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:23:25.449  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:23:26.104  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:23:26.184 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:23:26.260 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 29 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:23:26.275 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:23:26.282 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:23:26.356  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:23:26.373  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:23:26.380  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.807 seconds (process running for 4.627)
2023-07-25 13:23:46.837  INFO SCY-LP-005 - [nio-8080-exec-2] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:23:46.837  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:23:46.837 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:23:46.837 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:23:46.838 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:23:46.838 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3bf31f3e
2023-07-25 13:23:46.838 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@4b90a402
2023-07-25 13:23:46.838 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:23:46.838  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 1 ms
2023-07-25 13:23:46.844 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 13:23:46.851 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 13:23:46.915 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 13:23:47.047 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 13:23:47.048 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 13:23:47.052 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:24:14.347 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : PUT "/api/users/update", parameters={}
2023-07-25 13:24:14.347 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#updateUser(UserDto)
2023-07-25 13:24:14.349 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=1, tinNumber=1111111, name=Pavlossss, lastname=Alevras, address=Zografou 23, phoneNumber= (truncated)...]
2023-07-25 13:24:14.360 DEBUG SCY-LP-005 - [nio-8080-exec-3] [a.ExceptionHandlerExceptionResolver] : Using @ExceptionHandler com.scytalys.technikon.exception.ExistingUserAdvice#exceptionHandler(ExistingUserException)
2023-07-25 13:24:14.363 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.RequestResponseBodyMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:24:14.363 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.RequestResponseBodyMethodProcessor] : Writing [{errorMessage=Tin number already exists}]
2023-07-25 13:24:14.369 DEBUG SCY-LP-005 - [nio-8080-exec-3] [a.ExceptionHandlerExceptionResolver] : Resolved [com.scytalys.technikon.exception.ExistingUserException: Tin number already exists]
2023-07-25 13:24:14.369 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 409 CONFLICT
2023-07-25 13:24:37.084 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : PUT "/api/users/update", parameters={}
2023-07-25 13:24:37.084 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#updateUser(UserDto)
2023-07-25 13:24:37.085 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=1, tinNumber=1121211, name=Pavlossss, lastname=Alevras, address=Zografou 23, phoneNumber= (truncated)...]
2023-07-25 13:24:37.096 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-07-25 13:24:37.096 ERROR SCY-LP-005 - [nio-8080-exec-4] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:204)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy134.findById(Unknown Source)
	at com.scytalys.technikon.service.impl.UserServiceImpl.updateUser(UserServiceImpl.java:33)
	at com.scytalys.technikon.controller.UserController.updateUser(UserController.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:24:37.101 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for PUT "/error", parameters={}
2023-07-25 13:24:37.101 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:24:37.104 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:24:37.104 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:24:37 EEST 2023, status=500, error=Internal Server Error, path=/api/users/u (truncated)...]
2023-07-25 13:24:37.110 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:35:23.615  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:35:28.169  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:35:28.200  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 6852 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:35:28.203 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:35:28.204  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:35:29.046  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:35:29.052  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:35:29.053  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:35:29.053  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:35:29.121  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:35:29.121  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 883 ms
2023-07-25 13:35:29.229  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:35:29.273  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:35:29.274  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:35:29.378  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:35:29.477  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:35:29.749  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:35:29.752  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:35:29.754  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:35:29.804  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:35:30.475  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:35:31.042  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:35:31.114 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:35:31.176 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 30 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:35:31.188 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:35:31.195 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:35:31.253  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:35:31.268  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:35:31.273  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.384 seconds (process running for 4.176)
2023-07-25 13:35:35.390  INFO SCY-LP-005 - [nio-8080-exec-2] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:35:35.391  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:35:35.391 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:35:35.391 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:35:35.391 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:35:35.391 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@295e9aef
2023-07-25 13:35:35.391 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@260af8f7
2023-07-25 13:35:35.391 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:35:35.392  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 0 ms
2023-07-25 13:35:35.398 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:35:35.405 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:35:35.478 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:35:35.543 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:35:35.543 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:35:35.553 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:35:39.992 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 13:35:39.992 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 13:35:40.061 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:35:40.061 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 13:35:40.063 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 13:35:48.646 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update/1", parameters={}
2023-07-25 13:35:48.647 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updatePropertyById(PropertyDto, Long)
2023-07-25 13:35:48.648 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:35:48.653 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-07-25 13:35:48.654 ERROR SCY-LP-005 - [nio-8080-exec-4] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:204)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy143.findById(Unknown Source)
	at com.scytalys.technikon.service.impl.PropertyServiceImpl.updatePropertyById(PropertyServiceImpl.java:52)
	at com.scytalys.technikon.controller.PropertyController.updatePropertyById(PropertyController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:35:48.658 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for PUT "/error", parameters={}
2023-07-25 13:35:48.659 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:35:48.663 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:35:48.663 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:35:48 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 13:35:48.667 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:36:59.626 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update/1", parameters={}
2023-07-25 13:36:59.626 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updatePropertyById(PropertyDto, Long)
2023-07-25 13:36:59.629 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:36:59.631 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-07-25 13:36:59.631 ERROR SCY-LP-005 - [nio-8080-exec-5] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:204)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy143.findById(Unknown Source)
	at com.scytalys.technikon.service.impl.PropertyServiceImpl.updatePropertyById(PropertyServiceImpl.java:52)
	at com.scytalys.technikon.controller.PropertyController.updatePropertyById(PropertyController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:36:59.632 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for PUT "/error", parameters={}
2023-07-25 13:36:59.632 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:36:59.633 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:36:59.633 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:36:59 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 13:36:59.634 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:38:49.298 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 13:38:49.298 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 13:38:49.303 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 13:38:49.338 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 13:38:49.338 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 13:38:49.339 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:38:54.255 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update/1", parameters={}
2023-07-25 13:38:54.255 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updatePropertyById(PropertyDto, Long)
2023-07-25 13:38:54.256 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:38:54.258 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-07-25 13:38:54.258 ERROR SCY-LP-005 - [nio-8080-exec-9] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:204)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy143.findById(Unknown Source)
	at com.scytalys.technikon.service.impl.PropertyServiceImpl.updatePropertyById(PropertyServiceImpl.java:52)
	at com.scytalys.technikon.controller.PropertyController.updatePropertyById(PropertyController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:38:54.259 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for PUT "/error", parameters={}
2023-07-25 13:38:54.259 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:38:54.260 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:38:54.260 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:38:54 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 13:38:54.261 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:39:01.726 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:39:01.727 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:39:01.727 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:39:01.733 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:39:01.733 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:39:01.733 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:39:10.715  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:39:14.372  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:39:14.401  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 31312 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:39:14.404 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:39:14.406  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:39:15.221  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:39:15.227  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:39:15.228  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:39:15.229  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:39:15.295  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:39:15.295  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 862 ms
2023-07-25 13:39:15.403  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:39:15.452  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:39:15.454  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:39:15.551  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:39:15.649  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:39:15.931  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:39:15.936  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:39:15.937  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:39:15.989  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:39:16.635  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:39:17.172  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:39:17.251 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:39:17.320 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 30 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:39:17.333 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:39:17.340 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:39:17.403  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:39:17.419  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:39:17.425  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.337 seconds (process running for 4.127)
2023-07-25 13:39:21.452  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:39:21.453  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:39:21.453 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:39:21.453 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:39:21.453 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:39:21.453 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@295e9aef
2023-07-25 13:39:21.453 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@260af8f7
2023-07-25 13:39:21.453 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:39:21.453  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 0 ms
2023-07-25 13:39:21.459 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 13:39:21.467 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 13:39:21.533 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 13:39:21.660 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 13:39:21.660 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 13:39:21.664 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:39:23.736 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:39:23.736 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:39:23.756 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:39:23.772 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:39:23.772 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:39:23.778 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:40:27.026 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 13:40:27.026 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 13:40:27.045 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:40:27.045 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 13:40:27.046 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 13:40:33.965 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 13:40:33.965 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 13:40:33.969 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:40:33.969 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 13:40:33.969 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 13:40:45.682 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 13:40:45.682 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 13:40:45.694 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:40:45.694 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 13:40:45.695 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 13:40:49.716 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:40:49.716 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:40:49.717 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:40:49.724 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:40:49.724 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:40:49.725 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:42:29.163 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:42:29.163 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:42:29.164 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:42:29.176 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:42:29.176 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:42:29.176 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:52:12.499  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:52:17.712  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:52:17.754  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 1940 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:52:17.758 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:52:17.759  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:52:18.905  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:52:18.912  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:52:18.914  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:52:18.914  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:52:19.000  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:52:19.000  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 1194 ms
2023-07-25 13:52:19.153  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:52:19.218  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:52:19.221  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:52:19.347  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:52:19.473  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:52:19.808  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:52:19.815  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:52:19.816  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:52:19.878  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:52:20.802  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:52:21.558  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:52:21.654 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:52:21.737 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 30 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:52:21.754 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:52:21.763 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:52:21.845  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:52:21.869  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:52:21.876  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 4.583 seconds (process running for 5.81)
2023-07-25 13:52:35.427  INFO SCY-LP-005 - [nio-8080-exec-2] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:52:35.427  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:52:35.427 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:52:35.427 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:52:35.427 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:52:35.428 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7d2c9b65
2023-07-25 13:52:35.428 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@dcc7d1c
2023-07-25 13:52:35.428 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:52:35.428  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 1 ms
2023-07-25 13:52:35.435 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 13:52:35.442 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 13:52:35.511 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 13:52:35.647 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 13:52:35.647 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 13:52:35.654 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:52:48.192 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 13:52:48.192 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 13:52:48.212 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:52:48.212 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 13:52:48.218 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 13:52:51.377 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:52:51.377 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:52:51.400 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:52:51.420 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:52:51.421 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:52:51.422 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:52:55.915 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 13:52:55.915 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 13:52:55.929 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:52:55.929 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 13:52:55.930 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 13:55:22.269 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:55:22.269 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:55:22.270 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:55:22.277 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:55:22.277 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:55:22.277 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:56:20.034  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:56:22.965  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:56:23.003  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 27724 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:56:23.007 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:56:23.008  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:56:24.101  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:56:24.109  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:56:24.111  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:56:24.111  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:56:24.193  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:56:24.194  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 1145 ms
2023-07-25 13:56:24.331  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:56:24.392  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:56:24.394  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:56:24.523  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:56:24.648  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:56:24.975  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:56:24.982  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:56:24.983  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:56:25.045  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:56:25.851  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:56:26.517  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:56:26.615 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:56:26.702 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 30 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:56:26.717 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:56:26.725 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:56:26.804  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:56:26.822  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:56:26.829  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 4.258 seconds (process running for 5.493)
2023-07-25 13:56:30.700  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:56:30.700  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:56:30.700 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:56:30.700 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:56:30.700 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:56:30.701 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3453cf27
2023-07-25 13:56:30.701 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@74863aec
2023-07-25 13:56:30.701 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:56:30.702  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 1 ms
2023-07-25 13:56:30.708 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 13:56:30.716 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 13:56:30.787 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 13:56:30.931 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 13:56:30.931 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 13:56:30.937 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:56:33.601 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 13:56:33.602 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 13:56:33.617 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:56:33.617 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 13:56:33.623 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 13:56:36.182 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:56:36.182 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:56:36.202 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:56:36.221 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: insert or update on table "property" violates foreign key constraint "fkn9cdajshrebcritph05nuxxlv"
  Detail: Key (user_id)=(2) is not present in table "user".] [insert into property (active_state,address,pin,map_location_lat,map_location_long,property_picture,property_type,user_id,year_of_construction,id) values (?,?,?,?,?,?,?,?,?,?)]; SQL [insert into property (active_state,address,pin,map_location_lat,map_location_long,property_picture,property_type,user_id,year_of_construction,id) values (?,?,?,?,?,?,?,?,?,?)]; constraint [fkn9cdajshrebcritph05nuxxlv]
2023-07-25 13:56:36.222 ERROR SCY-LP-005 - [nio-8080-exec-4] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: insert or update on table "property" violates foreign key constraint "fkn9cdajshrebcritph05nuxxlv"
  Detail: Key (user_id)=(2) is not present in table "user".] [insert into property (active_state,address,pin,map_location_lat,map_location_long,property_picture,property_type,user_id,year_of_construction,id) values (?,?,?,?,?,?,?,?,?,?)]; SQL [insert into property (active_state,address,pin,map_location_lat,map_location_long,property_picture,property_type,user_id,year_of_construction,id) values (?,?,?,?,?,?,?,?,?,?)]; constraint [fkn9cdajshrebcritph05nuxxlv]] with root cause
org.postgresql.util.PSQLException: ERROR: insert or update on table "property" violates foreign key constraint "fkn9cdajshrebcritph05nuxxlv"
  Detail: Key (user_id)=(2) is not present in table "user".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:108)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:53)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:170)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2761)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:606)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:358)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy143.save(Unknown Source)
	at com.scytalys.technikon.service.impl.PropertyServiceImpl.createProperty(PropertyServiceImpl.java:20)
	at com.scytalys.technikon.controller.PropertyController.createProperty(PropertyController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:56:36.227 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for POST "/error", parameters={}
2023-07-25 13:56:36.228 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:56:36.232 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:56:36.232 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:56:36 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 13:56:36.238 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 13:57:31.744 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 13:57:31.745 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 13:57:31.746 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 13:57:31.757 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:57:31.757 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 13:57:31.758 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 13:57:46.952 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 13:57:46.952 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 13:57:46.967 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:57:46.967 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 13:57:46.997  WARN SCY-LP-005 - [nio-8080-exec-7] [m.s.DefaultHandlerExceptionResolver] : Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:581)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:548)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:221)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1341)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1152)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:57:46.997 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-07-25 13:57:46.997 ERROR SCY-LP-005 - [nio-8080-exec-7] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1012)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
2023-07-25 13:57:47.002 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : "INCLUDE" dispatch for GET "/error", parameters={}
2023-07-25 13:57:47.003 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:57:47.003 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Found 'Content-Type:application/json' in response
2023-07-25 13:57:47.004 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:57:47 EEST 2023, status=200, error=OK, path=/api/property/allproperties}]
2023-07-25 13:57:47.004 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Exiting from "INCLUDE" dispatch, status 200
2023-07-25 13:57:49.531 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 13:57:49.531 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 13:57:49.537 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 13:57:49.537 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 13:57:49.547  WARN SCY-LP-005 - [nio-8080-exec-9] [m.s.DefaultHandlerExceptionResolver] : Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:581)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:548)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:221)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1341)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1152)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 13:57:49.547 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-07-25 13:57:49.548 ERROR SCY-LP-005 - [nio-8080-exec-9] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError
	at java.base/java.lang.Exception.<init>(Exception.java:85)
	at java.base/java.io.IOException.<init>(IOException.java:80)
	at com.fasterxml.jackson.core.JacksonException.<init>(JacksonException.java:26)
	at com.fasterxml.jackson.core.JsonProcessingException.<init>(JsonProcessingException.java:25)
	at com.fasterxml.jackson.databind.DatabindException.<init>(DatabindException.java:22)
	at com.fasterxml.jackson.databind.DatabindException.<init>(DatabindException.java:34)
	at com.fasterxml.jackson.databind.JsonMappingException.<init>(JsonMappingException.java:247)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:787)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
2023-07-25 13:57:49.551 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : "INCLUDE" dispatch for GET "/error", parameters={}
2023-07-25 13:57:49.551 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 13:57:49.552 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Found 'Content-Type:application/json' in response
2023-07-25 13:57:49.552 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 13:57:49 EEST 2023, status=200, error=OK, path=/api/property/allproperties}]
2023-07-25 13:57:49.552 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Exiting from "INCLUDE" dispatch, status 200
2023-07-25 13:59:29.449  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:59:33.830  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 13:59:33.872  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 31632 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 13:59:33.876 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 13:59:33.877  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 13:59:35.102  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 13:59:35.112  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 13:59:35.113  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 13:59:35.114  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 13:59:35.200  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 13:59:35.200  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 1276 ms
2023-07-25 13:59:35.336  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 13:59:35.387  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 13:59:35.389  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 13:59:35.509  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:59:35.639  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 13:59:35.967  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:59:35.974  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:59:35.976  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 13:59:36.041  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 13:59:36.854  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 13:59:37.604  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 13:59:37.706 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 13:59:37.792 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 30 mappings in 'requestMappingHandlerMapping'
2023-07-25 13:59:37.810 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 13:59:37.820 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 13:59:37.912  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 13:59:37.934  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 13:59:37.944  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 4.531 seconds (process running for 5.479)
2023-07-25 13:59:43.123  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 13:59:43.124  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 13:59:43.124 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 13:59:43.124 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 13:59:43.124 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 13:59:43.124 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5f9cb96f
2023-07-25 13:59:43.124 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@4f9a8d71
2023-07-25 13:59:43.125 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 13:59:43.125  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 1 ms
2023-07-25 13:59:43.131 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 13:59:43.140 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 13:59:43.220 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 13:59:43.379 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 13:59:43.380 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 13:59:43.386 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:00:47.399 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:00:47.399 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:00:47.418 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:00:47.418 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:00:47.431 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:00:57.434 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:00:57.435 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:00:57.443 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:00:57.443 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 14:00:57.444 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:01:04.830 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 14:01:04.832 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 14:01:04.848 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.m.HandlerMethod              ] : Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<com.scytalys.technikon.dto.PropertyDto> com.scytalys.technikon.controller.PropertyController.createProperty(com.scytalys.technikon.dto.PropertyDto): JSON parse error: Unexpected end-of-input: expected close marker for Object (start marker at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 1])
2023-07-25 14:01:04.849  WARN SCY-LP-005 - [nio-8080-exec-7] [m.s.DefaultHandlerExceptionResolver] : Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected end-of-input: expected close marker for Object (start marker at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 1])]
2023-07-25 14:01:04.849 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 400 BAD_REQUEST
2023-07-25 14:01:04.852 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for POST "/error", parameters={}
2023-07-25 14:01:04.854 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 14:01:04.857 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:01:04.857 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 14:01:04 EEST 2023, status=400, error=Bad Request, path=/api/property/create}]
2023-07-25 14:01:04.863 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 400
2023-07-25 14:01:16.750 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 14:01:16.750 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 14:01:16.755 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 14:01:16.766 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:01:16.766 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 14:01:16.767 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:01:30.580 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:01:30.580 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:01:30.591 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:01:30.591 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:01:30.623  WARN SCY-LP-005 - [io-8080-exec-10] [m.s.DefaultHandlerExceptionResolver] : Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:581)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:548)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:221)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1341)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1152)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 14:01:30.623 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-07-25 14:01:30.623 ERROR SCY-LP-005 - [io-8080-exec-10] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1012)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:455)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:790)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
2023-07-25 14:01:30.629 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : "INCLUDE" dispatch for GET "/error", parameters={}
2023-07-25 14:01:30.631 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 14:01:30.631 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Found 'Content-Type:application/json' in response
2023-07-25 14:01:30.631 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 14:01:30 EEST 2023, status=202, error=Accepted, path=/api/property/allproperti (truncated)...]
2023-07-25 14:01:30.632 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Exiting from "INCLUDE" dispatch, status 202
2023-07-25 14:02:06.832 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 14:02:06.832 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 14:02:06.832 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 14:02:06.846 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 14:02:06.846 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 14:02:06.846 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:02:09.389 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:02:09.390 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:02:09.395 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:02:09.396 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:02:09.396 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:02:16.603 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 14:02:16.603 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 14:02:16.603 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 14:02:16.610 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:02:16.610 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 14:02:16.610 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:02:20.845 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:02:20.845 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:02:20.850 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:02:20.850 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1111111, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:02:20.851 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:04:05.930 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:04:05.930 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:04:05.937 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:04:05.937 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:04:05.945  WARN SCY-LP-005 - [nio-8080-exec-8] [m.s.DefaultHandlerExceptionResolver] : Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.checkCommitted(ResponseFacade.java:503)
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:347)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:581)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:548)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:221)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1341)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1152)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 14:04:05.946 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)
2023-07-25 14:04:05.946 ERROR SCY-LP-005 - [nio-8080-exec-8] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError)] with root cause
java.lang.StackOverflowError
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(UTF8JsonGenerator.java:1153)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject(UTF8JsonGenerator.java:390)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:174)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
2023-07-25 14:04:05.950 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : "INCLUDE" dispatch for GET "/error", parameters={}
2023-07-25 14:04:05.950 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 14:04:05.950 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Found 'Content-Type:application/json' in response
2023-07-25 14:04:05.951 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 14:04:05 EEST 2023, status=202, error=Accepted, path=/api/property/allproperti (truncated)...]
2023-07-25 14:04:05.951 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Exiting from "INCLUDE" dispatch, status 202
2023-07-25 14:04:12.372  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:04:14.734  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 14:04:14.763  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 14096 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 14:04:14.767 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 14:04:14.768  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 14:04:15.656  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 14:04:15.663  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 14:04:15.664  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 14:04:15.665  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 14:04:15.732  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 14:04:15.732  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 934 ms
2023-07-25 14:04:15.846  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 14:04:15.892  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 14:04:15.894  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 14:04:16.003  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:04:16.107  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 14:04:16.397  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:04:16.404  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:04:16.405  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:04:16.469  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:04:17.150  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:04:17.728  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 14:04:17.812 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 14:04:17.880 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 30 mappings in 'requestMappingHandlerMapping'
2023-07-25 14:04:17.894 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 14:04:17.901 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 14:04:17.965  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 14:04:17.981  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 14:04:17.987  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.54 seconds (process running for 4.608)
2023-07-25 14:05:00.912  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 14:05:00.912  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 14:05:00.912 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 14:05:00.912 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 14:05:00.912 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 14:05:00.913 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6f8b1902
2023-07-25 14:05:00.913 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@67fdc1e9
2023-07-25 14:05:00.913 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 14:05:00.913  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 1 ms
2023-07-25 14:05:00.921 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 14:05:00.928 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 14:05:01.005 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 14:05:01.073 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:05:01.074 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 14:05:01.083 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:05:05.486 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 14:05:05.487 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 14:05:05.494 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 14:05:05.573 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 14:05:05.573 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 14:05:05.575 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:05:31.798 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:05:31.799 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:05:31.818 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:05:31.818 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:05:31.820 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:05:50.785  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:05:55.476  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 14:05:55.506  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 22552 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 14:05:55.509 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 14:05:55.510  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 14:05:56.389  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 14:05:56.396  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 14:05:56.397  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 14:05:56.398  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 14:05:56.467  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 14:05:56.467  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 926 ms
2023-07-25 14:05:56.581  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 14:05:56.626  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 14:05:56.628  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 14:05:56.734  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:05:56.837  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 14:05:57.124  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:05:57.130  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:05:57.131  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:05:57.185  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:05:57.872  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:05:58.444  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 14:05:58.527 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 14:05:58.597 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 30 mappings in 'requestMappingHandlerMapping'
2023-07-25 14:05:58.611 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 14:05:58.618 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 14:05:58.688  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 14:05:58.706  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 14:05:58.713  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.534 seconds (process running for 4.366)
2023-07-25 14:06:04.886  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 14:06:04.886  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 14:06:04.886 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 14:06:04.886 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 14:06:04.886 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 14:06:04.887 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3453cf27
2023-07-25 14:06:04.887 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@74863aec
2023-07-25 14:06:04.887 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 14:06:04.887  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 1 ms
2023-07-25 14:06:04.894 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 14:06:04.902 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 14:06:04.979 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 14:06:05.132 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 14:06:05.133 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 14:06:05.138 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:06:39.740 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:06:39.740 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:06:39.756 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:06:39.756 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:06:39.767 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:06:50.200 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 14:06:50.200 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 14:06:50.213 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 14:06:50.225 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:06:50.225 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 14:06:50.227 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:14:42.091  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:14:48.559  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 14:14:48.610  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 20640 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 14:14:48.616 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 14:14:48.617  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 14:14:49.694  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 14:14:49.703  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 14:14:49.704  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 14:14:49.705  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 14:14:49.788  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 14:14:49.788  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 1132 ms
2023-07-25 14:14:49.959  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 14:14:50.014  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 14:14:50.016  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 14:14:50.142  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:14:50.264  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 14:14:50.593  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:14:50.599  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:14:50.600  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:14:50.665  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:14:51.466  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:14:52.149  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 14:14:52.257 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 14:14:52.344 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 30 mappings in 'requestMappingHandlerMapping'
2023-07-25 14:14:52.364 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 14:14:52.374 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 14:14:52.467  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 14:14:52.488  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 14:14:52.496  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 4.335 seconds (process running for 5.569)
2023-07-25 14:14:57.488  INFO SCY-LP-005 - [nio-8080-exec-2] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 14:14:57.489  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 14:14:57.489 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 14:14:57.489 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 14:14:57.489 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 14:14:57.490 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2493f9a8
2023-07-25 14:14:57.490 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@5c91b751
2023-07-25 14:14:57.492 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 14:14:57.492  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 3 ms
2023-07-25 14:14:57.502 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 14:14:57.515 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 14:14:57.611 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 14:14:57.797 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 14:14:57.798 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 14:14:57.805 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:15:00.293 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:15:00.293 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:15:00.320 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:15:00.320 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:15:00.333 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:15:03.075 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:15:03.075 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:15:03.084 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:15:03.084 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 14:15:03.085 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:15:06.468 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 14:15:06.468 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 14:15:06.479 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 14:15:06.501 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:15:06.501 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 14:15:06.512 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:15:15.314 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:15:15.314 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:15:15.323 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:15:15.323 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:15:15.325 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:17:26.353 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update/1", parameters={}
2023-07-25 14:17:26.353 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updatePropertyById(PropertyDto, Long)
2023-07-25 14:17:26.355 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 14:17:26.361 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Failed to complete request: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null
2023-07-25 14:17:26.362 ERROR SCY-LP-005 - [nio-8080-exec-9] [o.a.c.c.C.[.[.[.[dispatcherServlet]] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null] with root cause
java.lang.IllegalArgumentException: The given id must not be null
	at org.springframework.util.Assert.notNull(Assert.java:204)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:301)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy2/jdk.proxy2.$Proxy143.findById(Unknown Source)
	at com.scytalys.technikon.service.impl.PropertyServiceImpl.updatePropertyById(PropertyServiceImpl.java:60)
	at com.scytalys.technikon.controller.PropertyController.updatePropertyById(PropertyController.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-25 14:17:26.366 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for PUT "/error", parameters={}
2023-07-25 14:17:26.366 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 14:17:26.370 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:17:26.370 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 14:17:26 EEST 2023, status=500, error=Internal Server Error, path=/api/propert (truncated)...]
2023-07-25 14:17:26.374 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 500
2023-07-25 14:20:46.086  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:20:49.907  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 14:20:49.941  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 23096 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 14:20:49.950 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 14:20:49.950  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 14:20:50.859  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 14:20:50.865  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 14:20:50.866  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 14:20:50.866  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 14:20:50.944  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 14:20:50.945  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 965 ms
2023-07-25 14:20:51.075  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 14:20:51.117  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 14:20:51.119  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 14:20:51.224  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:20:51.350  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 14:20:51.699  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:20:51.706  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:20:51.707  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:20:51.765  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:20:52.480  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:20:53.069  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 14:20:53.155 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 14:20:53.225 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 30 mappings in 'requestMappingHandlerMapping'
2023-07-25 14:20:53.239 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 14:20:53.247 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 14:20:53.317  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 14:20:53.334  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 14:20:53.340  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 3.722 seconds (process running for 4.563)
2023-07-25 14:21:01.221  INFO SCY-LP-005 - [nio-8080-exec-2] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 14:21:01.222  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 14:21:01.222 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 14:21:01.222 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 14:21:01.222 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 14:21:01.222 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@75c8855e
2023-07-25 14:21:01.222 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@4f63219e
2023-07-25 14:21:01.223 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 14:21:01.223  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 1 ms
2023-07-25 14:21:01.229 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 14:21:01.236 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 14:21:01.305 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 14:21:01.436 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 14:21:01.437 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 14:21:01.445 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:21:06.923 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 14:21:06.923 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 14:21:06.939 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 14:21:06.978 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:21:06.978 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 14:21:06.991 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:21:12.441 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:21:12.441 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:21:12.455 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:21:12.455 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:21:12.458 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:21:20.082 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update/1", parameters={}
2023-07-25 14:21:20.082 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updatePropertyById(PropertyDto, Long)
2023-07-25 14:21:20.084 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 14:21:20.101 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:21:20.102 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 14:21:20.104 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 14:26:52.311 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:26:52.312 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:26:52.326 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:26:52.326 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:26:52.329 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:26:52.330 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:26:52.330 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:26:52.336 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:26:52.336 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:26:52.336 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:27:03.395 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:27:03.396 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:27:03.402 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:27:03.402 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:27:03.403 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:27:03.406 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:27:03.406 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:27:03.413 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:27:03.413 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:27:03.414 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:30:44.574 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:30:44.574 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:30:44.580 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:30:44.581 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:30:44.582 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:30:44.584 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:30:44.584 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:30:44.590 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:30:44.590 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:30:44.591 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:30:45.275 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:30:45.275 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:30:45.283 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:30:45.283 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:30:45.283 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:30:45.287 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:30:45.287 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:30:45.293 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:30:45.293 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:30:45.294 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:30:45.824 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:30:45.824 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:30:45.834 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:30:45.834 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:30:45.835 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:30:45.836 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:30:45.837 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:30:45.844 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:30:45.844 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:30:45.845 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:31:11.423 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:31:11.424 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:31:11.430 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:31:11.430 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:31:11.432 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:31:11.433 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:31:11.433 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:31:11.438 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:31:11.439 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:31:11.441 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:31:12.093 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:31:12.093 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:31:12.102 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:31:12.102 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:31:12.105 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:31:12.106 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:31:12.106 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:31:12.113 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:31:12.113 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:31:12.116 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:31:13.365 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:31:13.365 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:31:13.374 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:31:13.374 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:31:13.378 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:31:13.380 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:31:13.381 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:31:13.391 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:31:13.391 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:31:13.393 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:31:41.415 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:31:41.415 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:31:41.419 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:31:41.419 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:31:41.421 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:31:41.421 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 14:31:41.422 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 14:31:41.425 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:31:41.426 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 14:31:41.426 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:31:46.564 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:31:46.564 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:31:46.572 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:31:46.573 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:31:46.575 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:31:46.577 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:31:46.577 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:31:46.584 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:31:46.584 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:31:46.587 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:32:45.696 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:32:45.696 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:32:45.703 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:32:45.703 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:32:45.705 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:32:45.706 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:32:45.707 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:32:45.712 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:32:45.712 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:32:45.714 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:32:47.672 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:32:47.672 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:32:47.678 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:32:47.678 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:32:47.681 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:32:47.683 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:32:47.683 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:32:47.688 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:32:47.689 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:32:47.691 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:35:45.394 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:35:45.394 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:35:45.400 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:35:45.401 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:35:45.404 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:35:45.405 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:35:45.406 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:35:45.410 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:35:45.410 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:35:45.412 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:44:11.292  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:44:17.451  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 14:44:17.497  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 22040 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 14:44:17.501 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 14:44:17.502  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 14:44:18.643  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 14:44:18.651  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 14:44:18.653  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 14:44:18.654  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 14:44:18.738  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 14:44:18.738  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 1191 ms
2023-07-25 14:44:18.867  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 14:44:18.923  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 14:44:18.925  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 14:44:19.043  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:44:19.159  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 14:44:19.526  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:44:19.533  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:44:19.535  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:44:19.609  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:44:20.462  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:44:21.087  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 14:44:21.169 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 14:44:21.243 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 30 mappings in 'requestMappingHandlerMapping'
2023-07-25 14:44:21.259 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 14:44:21.266 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 14:44:21.346  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 14:44:21.363  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 14:44:21.371  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 4.43 seconds (process running for 5.785)
2023-07-25 14:44:27.024  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:44:29.792  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 14:44:29.827  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 3556 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 14:44:29.831 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 14:44:29.833  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 14:44:30.836  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 14:44:30.843  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 14:44:30.845  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 14:44:30.845  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 14:44:30.923  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 14:44:30.923  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 1055 ms
2023-07-25 14:44:31.054  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 14:44:31.107  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 14:44:31.108  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 14:44:31.228  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:44:31.341  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 14:44:31.635  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:44:31.641  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:44:31.643  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:44:31.702  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:44:32.458  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:44:33.160  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 14:44:33.256 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 14:44:33.338 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 30 mappings in 'requestMappingHandlerMapping'
2023-07-25 14:44:33.354 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 14:44:33.362 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 14:44:33.438  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 14:44:33.463  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 14:44:33.471  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 4.044 seconds (process running for 5.276)
2023-07-25 14:44:59.258  INFO SCY-LP-005 - [nio-8080-exec-1] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 14:44:59.258  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 14:44:59.258 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 14:44:59.258 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 14:44:59.258 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 14:44:59.258 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@41cec7b0
2023-07-25 14:44:59.258 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@892f1fa
2023-07-25 14:44:59.258 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 14:44:59.258  INFO SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 0 ms
2023-07-25 14:44:59.265 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 14:44:59.271 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 14:44:59.342 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 14:44:59.468 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 14:44:59.468 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 14:44:59.472 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:45:03.448 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:45:03.448 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:45:03.464 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:45:03.464 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 14:45:03.469 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:45:05.618 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 14:45:05.618 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 14:45:05.634 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 14:45:05.663 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:45:05.664 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 14:45:05.676 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:45:09.138 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 14:45:09.138 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 14:45:09.146 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:45:09.146 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 14:45:09.148 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 14:45:20.695 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/findPropertyByPin/123456789", parameters={}
2023-07-25 14:45:20.695 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#findPropertyByPin(Long)
2023-07-25 14:45:20.700 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.m.HandlerMethod              ] : Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<com.scytalys.technikon.dto.PropertyDto> com.scytalys.technikon.controller.PropertyController.findPropertyByPin(java.lang.Long): Required request parameter 'pin' for method parameter type Long is not present
2023-07-25 14:45:20.701  WARN SCY-LP-005 - [nio-8080-exec-9] [m.s.DefaultHandlerExceptionResolver] : Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'pin' for method parameter type Long is not present]
2023-07-25 14:45:20.701 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 400 BAD_REQUEST
2023-07-25 14:45:20.704 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for GET "/error", parameters={}
2023-07-25 14:45:20.705 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 14:45:20.708 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:45:20.708 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 14:45:20 EEST 2023, status=400, error=Bad Request, path=/api/property/findProp (truncated)...]
2023-07-25 14:45:20.715 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 400
2023-07-25 14:51:04.520  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:51:09.986  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 14:51:10.034  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 19180 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 14:51:10.039 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 14:51:10.040  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 14:51:11.391  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 14:51:11.401  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 14:51:11.403  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 14:51:11.403  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 14:51:11.496  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 14:51:11.497  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 1405 ms
2023-07-25 14:51:11.650  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 14:51:11.716  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 14:51:11.717  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 14:51:11.847  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:51:11.987  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 14:51:12.332  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:51:12.337  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:51:12.340  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:51:12.409  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:51:13.214  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:51:13.877  WARN SCY-LP-005 - [           main] [gServletWebServerApplicationContext] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'propertyController' defined in file [C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes\com\scytalys\technikon\controller\PropertyController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'propertyServiceImpl' defined in file [C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes\com\scytalys\technikon\service\impl\PropertyServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'propertyRepository' defined in com.scytalys.technikon.repository.PropertyRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract com.scytalys.technikon.domain.Property com.scytalys.technikon.repository.PropertyRepository.findByPinNumber(java.lang.Long); Reason: Using named parameters for method public abstract com.scytalys.technikon.domain.Property com.scytalys.technikon.repository.PropertyRepository.findByPinNumber(java.lang.Long) but parameter 'Optional[pinNumber]' not found in annotated query 'select p from Property p
        where p.pinNumber = :pin
'
2023-07-25 14:51:13.877  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:51:13.921  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Stopping service [Tomcat]
2023-07-25 14:51:13.932  INFO SCY-LP-005 - [           main] [a.l.ConditionEvaluationReportLogger] : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-07-25 14:51:13.950 ERROR SCY-LP-005 - [           main] [o.s.b.SpringApplication            ] : Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'propertyController' defined in file [C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes\com\scytalys\technikon\controller\PropertyController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'propertyServiceImpl' defined in file [C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes\com\scytalys\technikon\service\impl\PropertyServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'propertyRepository' defined in com.scytalys.technikon.repository.PropertyRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract com.scytalys.technikon.domain.Property com.scytalys.technikon.repository.PropertyRepository.findByPinNumber(java.lang.Long); Reason: Using named parameters for method public abstract com.scytalys.technikon.domain.Property com.scytalys.technikon.repository.PropertyRepository.findByPinNumber(java.lang.Long) but parameter 'Optional[pinNumber]' not found in annotated query 'select p from Property p
        where p.pinNumber = :pin
'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.scytalys.technikon.TechnikonApplication.main(TechnikonApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'propertyServiceImpl' defined in file [C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes\com\scytalys\technikon\service\impl\PropertyServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'propertyRepository' defined in com.scytalys.technikon.repository.PropertyRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract com.scytalys.technikon.domain.Property com.scytalys.technikon.repository.PropertyRepository.findByPinNumber(java.lang.Long); Reason: Using named parameters for method public abstract com.scytalys.technikon.domain.Property com.scytalys.technikon.repository.PropertyRepository.findByPinNumber(java.lang.Long) but parameter 'Optional[pinNumber]' not found in annotated query 'select p from Property p
        where p.pinNumber = :pin
'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'propertyRepository' defined in com.scytalys.technikon.repository.PropertyRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract com.scytalys.technikon.domain.Property com.scytalys.technikon.repository.PropertyRepository.findByPinNumber(java.lang.Long); Reason: Using named parameters for method public abstract com.scytalys.technikon.domain.Property com.scytalys.technikon.repository.PropertyRepository.findByPinNumber(java.lang.Long) but parameter 'Optional[pinNumber]' not found in annotated query 'select p from Property p
        where p.pinNumber = :pin
'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 more
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract com.scytalys.technikon.domain.Property com.scytalys.technikon.repository.PropertyRepository.findByPinNumber(java.lang.Long); Reason: Using named parameters for method public abstract com.scytalys.technikon.domain.Property com.scytalys.technikon.repository.PropertyRepository.findByPinNumber(java.lang.Long) but parameter 'Optional[pinNumber]' not found in annotated query 'select p from Property p
        where p.pinNumber = :pin
'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 44 more
Caused by: java.lang.IllegalStateException: Using named parameters for method public abstract com.scytalys.technikon.domain.Property com.scytalys.technikon.repository.PropertyRepository.findByPinNumber(java.lang.Long) but parameter 'Optional[pinNumber]' not found in annotated query 'select p from Property p
        where p.pinNumber = :pin
'
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:179)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:146)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:94)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 more
2023-07-25 14:52:04.603  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 14:52:04.648  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 3380 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 14:52:04.653 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 14:52:04.655  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 14:52:05.797  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 14:52:05.807  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 14:52:05.809  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 14:52:05.809  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 14:52:05.899  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 14:52:05.899  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 1205 ms
2023-07-25 14:52:06.051  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 14:52:06.113  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 14:52:06.115  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 14:52:06.243  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:52:06.368  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 14:52:06.725  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:52:06.731  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:52:06.733  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 14:52:06.794  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 14:52:07.601  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 14:52:08.256  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 14:52:08.345 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 14:52:08.429 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 30 mappings in 'requestMappingHandlerMapping'
2023-07-25 14:52:08.444 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 14:52:08.450 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 14:52:08.526  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 14:52:08.543  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 14:52:08.550  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 4.36 seconds (process running for 5.557)
2023-07-25 14:52:18.374  INFO SCY-LP-005 - [nio-8080-exec-2] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 14:52:18.374  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 14:52:18.375 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 14:52:18.375 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 14:52:18.375 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 14:52:18.375 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@62065d12
2023-07-25 14:52:18.375 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@68f1e261
2023-07-25 14:52:18.375 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 14:52:18.375  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 1 ms
2023-07-25 14:52:18.382 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 14:52:18.391 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 14:52:18.471 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 14:52:18.635 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 14:52:18.635 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 14:52:18.642 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:52:24.797 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 14:52:24.797 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 14:52:24.816 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 14:52:24.857 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:52:24.857 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 14:52:24.875 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 14:52:28.829 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/findPropertyByPin/123456789", parameters={}
2023-07-25 14:52:28.829 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#findPropertyByPin(Long)
2023-07-25 14:52:28.832 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.m.HandlerMethod              ] : Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<com.scytalys.technikon.dto.PropertyDto> com.scytalys.technikon.controller.PropertyController.findPropertyByPin(java.lang.Long): Required request parameter 'pin' for method parameter type Long is not present
2023-07-25 14:52:28.833  WARN SCY-LP-005 - [nio-8080-exec-4] [m.s.DefaultHandlerExceptionResolver] : Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'pin' for method parameter type Long is not present]
2023-07-25 14:52:28.834 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 400 BAD_REQUEST
2023-07-25 14:52:28.836 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for GET "/error", parameters={}
2023-07-25 14:52:28.837 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 14:52:28.840 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 14:52:28.841 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 14:52:28 EEST 2023, status=400, error=Bad Request, path=/api/property/findProp (truncated)...]
2023-07-25 14:52:28.845 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 400
2023-07-25 14:56:06.372  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 15:02:29.601  INFO SCY-LP-005 - [kground-preinit] [o.h.v.i.u.Version                  ] : HV000001: Hibernate Validator 8.0.0.Final
2023-07-25 15:02:29.636  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Starting TechnikonApplication using Java 17.0.7 with PID 20092 (C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final\target\classes started by kevin in C:\Users\kevin\Desktop\Java Bootcamp\Technikon Final)
2023-07-25 15:02:29.641 DEBUG SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Running with Spring Boot v3.1.1, Spring v6.0.10
2023-07-25 15:02:29.642  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : No active profile set, falling back to 1 default profile: "default"
2023-07-25 15:02:30.650  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat initialized with port(s): 8080 (http)
2023-07-25 15:02:30.657  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Initializing ProtocolHandler ["http-nio-8080"]
2023-07-25 15:02:30.658  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardService            ] : Starting service [Tomcat]
2023-07-25 15:02:30.659  INFO SCY-LP-005 - [           main] [o.a.c.c.StandardEngine             ] : Starting Servlet engine: [Apache Tomcat/10.1.10]
2023-07-25 15:02:30.741  INFO SCY-LP-005 - [           main] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring embedded WebApplicationContext
2023-07-25 15:02:30.741  INFO SCY-LP-005 - [           main] [.ServletWebServerApplicationContext] : Root WebApplicationContext: initialization completed in 1063 ms
2023-07-25 15:02:30.876  INFO SCY-LP-005 - [           main] [o.h.j.i.u.LogHelper                ] : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-07-25 15:02:30.931  INFO SCY-LP-005 - [           main] [o.h.Version                        ] : HHH000412: Hibernate ORM core version 6.2.5.Final
2023-07-25 15:02:30.933  INFO SCY-LP-005 - [           main] [o.h.c.Environment                  ] : HHH000406: Using bytecode reflection optimizer
2023-07-25 15:02:31.060  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 15:02:31.197  INFO SCY-LP-005 - [           main] [o.s.o.j.p.SpringPersistenceUnitInfo] : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-07-25 15:02:31.558  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 15:02:31.564  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 15:02:31.567  WARN SCY-LP-005 - [           main] [h.b.i.InFlightMetadataCollectorImpl] : HHH000069: Duplicate generator name idGenerator
2023-07-25 15:02:31.630  INFO SCY-LP-005 - [           main] [o.h.b.i.BytecodeProviderInitiator  ] : HHH000021: Bytecode provider name : bytebuddy
2023-07-25 15:02:32.417  INFO SCY-LP-005 - [           main] [alContainerEntityManagerFactoryBean] : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-25 15:02:33.102  WARN SCY-LP-005 - [           main] [seConfiguration$JpaWebConfiguration] : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-25 15:02:33.194 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerAdapter] : ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2023-07-25 15:02:33.283 DEBUG SCY-LP-005 - [           main] [.m.m.a.RequestMappingHandlerMapping] : 31 mappings in 'requestMappingHandlerMapping'
2023-07-25 15:02:33.301 DEBUG SCY-LP-005 - [           main] [o.s.w.s.h.SimpleUrlHandlerMapping  ] : Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2023-07-25 15:02:33.315 DEBUG SCY-LP-005 - [           main] [a.ExceptionHandlerExceptionResolver] : ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2023-07-25 15:02:33.395  INFO SCY-LP-005 - [           main] [o.a.c.h.Http11NioProtocol          ] : Starting ProtocolHandler ["http-nio-8080"]
2023-07-25 15:02:33.413  INFO SCY-LP-005 - [           main] [o.s.b.w.e.t.TomcatWebServer        ] : Tomcat started on port(s): 8080 (http) with context path ''
2023-07-25 15:02:33.421  INFO SCY-LP-005 - [           main] [c.s.t.TechnikonApplication         ] : Started TechnikonApplication in 4.206 seconds (process running for 5.363)
2023-07-25 15:02:38.855  INFO SCY-LP-005 - [nio-8080-exec-2] [o.a.c.c.C.[.[.[/]                  ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-25 15:02:38.855  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Initializing Servlet 'dispatcherServlet'
2023-07-25 15:02:38.855 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected StandardServletMultipartResolver
2023-07-25 15:02:38.856 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected AcceptHeaderLocaleResolver
2023-07-25 15:02:38.856 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected FixedThemeResolver
2023-07-25 15:02:38.856 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2d12a71f
2023-07-25 15:02:38.856 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Detected org.springframework.web.servlet.support.SessionFlashMapManager@6ac9742e
2023-07-25 15:02:38.857 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2023-07-25 15:02:38.857  INFO SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed initialization in 2 ms
2023-07-25 15:02:38.863 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : POST "/api/auth/register", parameters={}
2023-07-25 15:02:38.870 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.AuthController#register(UserDto)
2023-07-25 15:02:38.937 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [UserDto(id=null, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6 (truncated)...]
2023-07-25 15:02:39.068 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 15:02:39.068 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["User Registered successfully"]
2023-07-25 15:02:39.073 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 15:02:45.369 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:02:45.369 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:02:45.384 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:02:45.384 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 15:02:45.388 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:02:49.869 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 15:02:49.869 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 15:02:49.882 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 15:02:49.913 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:02:49.914 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 15:02:49.927 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 15:03:01.302 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : PUT "/api/property/update/1", parameters={}
2023-07-25 15:03:01.302 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#updatePropertyById(PropertyDto, Long)
2023-07-25 15:03:01.303 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 15:03:01.320 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:03:01.320 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 15:03:01.322 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 15:03:27.327 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/findPropertyByPin/1", parameters={}
2023-07-25 15:03:27.328 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#findPropertyByPin(Long)
2023-07-25 15:03:27.331 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.m.HandlerMethod              ] : Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<com.scytalys.technikon.dto.PropertyDto> com.scytalys.technikon.controller.PropertyController.findPropertyByPin(java.lang.Long): Required request parameter 'pin' for method parameter type Long is not present
2023-07-25 15:03:27.333  WARN SCY-LP-005 - [nio-8080-exec-6] [m.s.DefaultHandlerExceptionResolver] : Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'pin' for method parameter type Long is not present]
2023-07-25 15:03:27.333 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 400 BAD_REQUEST
2023-07-25 15:03:27.337 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : "ERROR" dispatch for GET "/error", parameters={}
2023-07-25 15:03:27.337 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2023-07-25 15:03:27.341 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:03:27.341 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [{timestamp=Tue Jul 25 15:03:27 EEST 2023, status=400, error=Bad Request, path=/api/property/findProp (truncated)...]
2023-07-25 15:03:27.346 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Exiting from "ERROR" dispatch, status 400
2023-07-25 15:03:42.415 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/search/1", parameters={}
2023-07-25 15:03:42.415 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#findPropertyById(Long)
2023-07-25 15:03:42.421 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:03:42.421 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=1, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 15:03:42.424 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:05:15.716 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : OPTIONS "/api/property/delete/1", parameters={}
2023-07-25 15:05:15.717 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#deleteProperty(Long)
2023-07-25 15:05:15.723 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 15:05:15.726 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : DELETE "/api/property/delete/1", parameters={}
2023-07-25 15:05:15.727 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#deleteProperty(Long)
2023-07-25 15:05:15.745 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 15:05:15.745 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["Repair deleted successfully"]
2023-07-25 15:05:15.746 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 15:05:16.412 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:05:16.412 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:05:16.417 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:05:16.417 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 15:05:16.418 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:05:16.419 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:05:16.419 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:05:16.424 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:05:16.424 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 15:05:16.425 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:06:58.545 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 15:06:58.545 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 15:06:58.545 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 15:06:58.555 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:06:58.555 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 15:06:58.557 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 15:08:06.979 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:08:06.979 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:08:06.988 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:08:06.988 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:08:06.993 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:08:06.994 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:08:06.994 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:08:06.999 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:08:06.999 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:08:07.002 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:09:39.908 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:09:39.908 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:09:39.917 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:09:39.917 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:09:39.920 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:09:39.920 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:09:39.920 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:09:39.926 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:09:39.926 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:09:39.930 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:13:18.398 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:13:18.398 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:13:18.406 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:13:18.406 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:13:18.409 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:13:18.411 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:13:18.411 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:13:18.417 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:13:18.417 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:13:18.420 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:13:30.384 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:13:30.384 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:13:30.391 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:13:30.391 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:13:30.394 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:13:30.395 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:13:30.395 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:13:30.404 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:13:30.404 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:13:30.407 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:15:02.590 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:15:02.590 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:15:02.597 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:15:02.598 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:15:02.600 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:15:02.601 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:15:02.601 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:15:02.606 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:15:02.607 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:15:02.608 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:17:10.834 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:17:10.834 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:17:10.843 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:17:10.843 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:17:10.847 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:17:10.850 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:17:10.850 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:17:10.861 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:17:10.861 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:17:10.866 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:17:13.052 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:17:13.052 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:17:13.064 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:17:13.065 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:17:13.068 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:17:13.069 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:17:13.069 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:17:13.079 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:17:13.079 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:17:13.082 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:17:18.460 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:17:18.460 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:17:18.467 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:17:18.467 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:17:18.470 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:17:18.472 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:17:18.472 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:17:18.480 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:17:18.480 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:17:18.483 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:18:12.424 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:18:12.424 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:18:12.431 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:18:12.431 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:18:12.435 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:18:12.437 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:18:12.437 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:18:12.446 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:18:12.446 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:18:12.450 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:34:30.664 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:34:30.664 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:34:30.674 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:34:30.675 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:34:30.679 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:34:30.681 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:34:30.681 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:34:30.688 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:34:30.688 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:34:30.691 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:35:07.523 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 15:35:07.523 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 15:35:07.530 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:35:07.530 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 15:35:07.532 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:35:07.534 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 15:35:07.534 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 15:35:07.540 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:35:07.540 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 15:35:07.542 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:35:14.912 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:35:14.912 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:35:14.918 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:35:14.918 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:35:14.920 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:35:14.921 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:35:14.921 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:35:14.928 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:35:14.929 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:35:14.931 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:35:51.884 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:35:51.884 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:35:51.893 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:35:51.893 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:35:51.897 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:35:51.899 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:35:51.899 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:35:51.904 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:35:51.905 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:35:51.907 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:36:06.481 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:36:06.481 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:36:06.488 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:36:06.488 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:36:06.489 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:36:06.491 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:36:06.491 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:36:06.498 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:36:06.498 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:36:06.500 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:36:46.384 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:36:46.384 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:36:46.390 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:36:46.390 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:36:46.393 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:36:46.394 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:36:46.394 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:36:46.401 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:36:46.401 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:36:46.404 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:40:11.315 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:40:11.315 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:40:11.322 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:40:11.322 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:40:11.324 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:40:11.325 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:40:11.325 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:40:11.332 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:40:11.332 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:40:11.334 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:42:38.353 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:42:38.354 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:42:38.362 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:42:38.362 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:42:38.366 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:42:38.368 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:42:38.368 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:42:38.373 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:42:38.373 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:42:38.376 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:43:45.515 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:43:45.515 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:43:45.524 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:43:45.524 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:43:45.527 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:43:45.530 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:43:45.531 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:43:45.539 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:43:45.539 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:43:45.542 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:43:49.744 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:43:49.744 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:43:49.753 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:43:49.753 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:43:49.756 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:43:49.758 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:43:49.758 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:43:49.766 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:43:49.766 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:43:49.768 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:44:42.417 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:44:42.417 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:44:42.424 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:44:42.424 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:44:42.427 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:44:42.429 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:44:42.429 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:44:42.436 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:44:42.436 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:44:42.438 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:45:56.968 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:45:56.970 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:45:56.977 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:45:56.978 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:45:56.980 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:45:56.982 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:45:56.982 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:45:56.989 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:45:56.989 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:45:56.992 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:47:09.146 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:47:09.146 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:47:09.153 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:47:09.154 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:47:09.156 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:47:09.158 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:47:09.158 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:47:09.165 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:47:09.165 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:47:09.167 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:47:29.393 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:47:29.393 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:47:29.398 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:47:29.398 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:47:29.400 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:47:29.402 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:47:29.402 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:47:29.409 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:47:29.409 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:47:29.411 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:48:48.521 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:48:48.522 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:48:48.530 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:48:48.531 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:48:48.535 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:48:48.539 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:48:48.539 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:48:48.547 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:48:48.547 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:48:48.551 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:51:56.548 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:51:56.548 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:51:56.555 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:51:56.555 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:51:56.559 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:51:56.561 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:51:56.561 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:51:56.567 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:51:56.567 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:51:56.570 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:52:31.324 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 15:52:31.325 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 15:52:31.331 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:52:31.332 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 15:52:31.333 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:52:31.334 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 15:52:31.334 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 15:52:31.339 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:52:31.340 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 15:52:31.340 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:52:32.607 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 15:52:32.607 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 15:52:32.614 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 15:52:32.614 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 15:52:32.615 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:52:32.617 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 15:52:32.618 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 15:52:32.623 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 15:52:32.623 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 15:52:32.624 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:52:32.625 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 15:52:32.626 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 15:52:32.630 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 15:52:32.630 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 15:52:32.632 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:52:32.632 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 15:52:32.633 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 15:52:32.638 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 15:52:32.638 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 15:52:32.639 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:52:51.925 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:52:51.925 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:52:51.931 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:52:51.931 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:52:51.933 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:52:51.934 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:52:51.934 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:52:51.940 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:52:51.940 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:52:51.943 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:53:24.378 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:53:24.379 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:53:24.386 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:53:24.386 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:53:24.389 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:53:24.391 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:53:24.391 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:53:24.398 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:53:24.398 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:53:24.400 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:53:59.558 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:53:59.558 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:53:59.567 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:53:59.567 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:53:59.570 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:53:59.573 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:53:59.573 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:53:59.582 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:53:59.582 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:53:59.584 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:55:41.589 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:55:41.590 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:55:41.596 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:55:41.596 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:55:41.600 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:55:41.602 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:55:41.602 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:55:41.608 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:55:41.608 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:55:41.609 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:57:04.231 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:57:04.231 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:57:04.240 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:57:04.240 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:57:04.243 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:57:04.245 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:57:04.245 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:57:04.252 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:57:04.252 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:57:04.255 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:57:15.209 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 15:57:15.209 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 15:57:15.214 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:57:15.214 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 15:57:15.215 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:57:15.216 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 15:57:15.216 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 15:57:15.220 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:57:15.220 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 15:57:15.221 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:57:16.480 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 15:57:16.481 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 15:57:16.487 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 15:57:16.487 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 15:57:16.488 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:57:16.490 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 15:57:16.490 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 15:57:16.495 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 15:57:16.495 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 15:57:16.495 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:57:16.497 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 15:57:16.497 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 15:57:16.501 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 15:57:16.501 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 15:57:16.502 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:57:16.504 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 15:57:16.504 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 15:57:16.509 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 15:57:16.509 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 15:57:16.510 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:57:26.106 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:57:26.106 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:57:26.121 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:57:26.121 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:57:26.125 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 15:57:26.127 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 15:57:26.128 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 15:57:26.134 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 15:57:26.134 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 15:57:26.137 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:00:48.507 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:00:48.507 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:00:48.513 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:00:48.513 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:00:48.516 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:00:48.518 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:00:48.518 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:00:48.525 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:00:48.525 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:00:48.527 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:02:43.501 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:02:43.501 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:02:43.511 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:02:43.511 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:02:43.513 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:02:43.514 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:02:43.514 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:02:43.520 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:02:43.520 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:02:43.523 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:04:21.239 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:04:21.239 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:04:21.245 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:04:21.246 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:04:21.248 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:04:21.250 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:04:21.250 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:04:21.257 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:04:21.257 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:04:21.259 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:06:59.834 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:06:59.834 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:06:59.841 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:06:59.842 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:06:59.845 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:06:59.846 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:06:59.846 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:06:59.852 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:06:59.852 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:06:59.855 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:08:00.305 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:08:00.305 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:08:00.312 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:08:00.312 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:08:00.316 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:08:00.319 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:08:00.319 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:08:00.327 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:08:00.328 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:08:00.330 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:08:09.794 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 16:08:09.794 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 16:08:09.798 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:08:09.798 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 16:08:09.799 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:08:09.800 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 16:08:09.800 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 16:08:09.804 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:08:09.804 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 16:08:09.809 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:08:10.925 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 16:08:10.925 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 16:08:10.929 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 16:08:10.929 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 16:08:10.930 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:08:10.931 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 16:08:10.931 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 16:08:10.935 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 16:08:10.935 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 16:08:10.936 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:08:10.937 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 16:08:10.937 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 16:08:10.940 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 16:08:10.941 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 16:08:10.941 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:08:10.942 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 16:08:10.942 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 16:08:10.945 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 16:08:10.945 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 16:08:10.946 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:08:18.534 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:08:18.534 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:08:18.540 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:08:18.540 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:08:18.542 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:08:18.545 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:08:18.545 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:08:18.553 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:08:18.553 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:08:18.555 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:09:32.389 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:09:32.389 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:09:32.396 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:09:32.396 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:09:32.399 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:09:32.402 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:09:32.402 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:09:32.409 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:09:32.409 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:09:32.411 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:11:14.813 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:11:14.813 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:11:14.819 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:11:14.819 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:11:14.820 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:11:14.822 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:11:14.822 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:11:14.828 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:11:14.828 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:11:14.830 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:11:27.897 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:11:27.897 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:11:27.902 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:11:27.903 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:11:27.904 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:11:30.709 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:11:30.709 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:11:30.715 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:11:30.715 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:11:30.717 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:11:30.719 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:11:30.719 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:11:30.726 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:11:30.726 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:11:30.728 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:12:42.976 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:12:42.976 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:12:42.983 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:12:42.983 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:12:42.986 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:12:42.990 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:12:42.990 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:12:42.999 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:12:42.999 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:12:43.002 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:17:49.226 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:17:49.226 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:17:49.234 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:17:49.234 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:17:49.236 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:17:49.238 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:17:49.238 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:17:49.242 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:17:49.242 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:17:49.243 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:18:49.743 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:18:49.743 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:18:49.749 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:18:49.749 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:18:49.749 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:19:45.938 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:19:45.939 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:19:45.945 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:19:45.945 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:19:45.946 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:19:45.948 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:19:45.948 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:19:45.955 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:19:45.955 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:19:45.958 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:24:45.946 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:24:45.946 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:24:45.954 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:24:45.955 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:24:45.957 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:24:45.960 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:24:45.960 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:24:45.967 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:24:45.967 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:24:45.969 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:28:47.502 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 16:28:47.502 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 16:28:47.509 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:28:47.509 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 16:28:47.510 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:28:47.511 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 16:28:47.511 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 16:28:47.515 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:28:47.516 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 16:28:47.516 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:28:57.033 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:28:57.033 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:28:57.039 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:28:57.039 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:28:57.042 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:28:57.043 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:28:57.044 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:28:57.051 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:28:57.051 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=2, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:28:57.053 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:28:58.550 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : OPTIONS "/api/property/delete/2", parameters={}
2023-07-25 16:28:58.551 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#deleteProperty(Long)
2023-07-25 16:28:58.551 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 16:28:58.553 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : DELETE "/api/property/delete/2", parameters={}
2023-07-25 16:28:58.553 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#deleteProperty(Long)
2023-07-25 16:28:58.572 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2023-07-25 16:28:58.572 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing ["Repair deleted successfully"]
2023-07-25 16:28:58.572 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 200 OK
2023-07-25 16:28:59.043 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:28:59.043 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:28:59.050 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:28:59.051 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 16:28:59.051 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:28:59.053 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:28:59.053 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:28:59.058 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:28:59.058 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 16:28:59.058 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:29:01.038 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:29:01.038 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:29:01.043 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:29:01.043 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 16:29:01.044 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:29:01.046 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:29:01.046 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:29:01.050 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:29:01.050 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[]]
2023-07-25 16:29:01.051 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:29:14.753 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : POST "/api/property/create", parameters={}
2023-07-25 16:29:14.754 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#createProperty(PropertyDto)
2023-07-25 16:29:14.757 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.RequestResponseBodyMethodProcessor] : Read "application/json;charset=UTF-8" to [PropertyDto(id=null, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyTyp (truncated)...]
2023-07-25 16:29:14.771 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:29:14.771 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType=A (truncated)...]
2023-07-25 16:29:14.773 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 201 CREATED
2023-07-25 16:29:18.241 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:29:18.241 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:29:18.247 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:29:18.247 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:29:18.250 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:29:18.251 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:29:18.251 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:29:18.260 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:29:18.260 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:29:18.262 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:30:24.222 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:30:24.222 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:30:24.230 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:30:24.230 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:30:24.233 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:30:24.235 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:30:24.235 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:30:24.240 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:30:24.240 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:30:24.243 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:30:29.303 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:30:29.303 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:30:29.308 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:30:29.309 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:30:29.311 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:30:29.312 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:30:29.312 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:30:29.316 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:30:29.316 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:30:29.318 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:35:08.451 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:35:08.451 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:35:08.462 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:35:08.462 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:35:08.465 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:35:08.469 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:35:08.469 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:35:08.477 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:35:08.477 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:35:08.479 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:35:17.774 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:35:17.774 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:35:17.781 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:35:17.781 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:35:17.786 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:35:17.789 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:35:17.789 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:35:17.796 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:35:17.796 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:35:17.798 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:42:27.499 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:42:27.500 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:42:27.506 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:42:27.506 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:42:27.509 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:42:27.510 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:42:27.510 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:42:27.516 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:42:27.516 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:42:27.518 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:51:12.150 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:51:12.151 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:51:12.158 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:51:12.159 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:51:12.161 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:51:12.164 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 16:51:12.165 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 16:51:12.169 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:51:12.169 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 16:51:12.171 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:57:57.358 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 16:57:57.358 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 16:57:57.364 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:57:57.364 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 16:57:57.365 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:57:57.367 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 16:57:57.367 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 16:57:57.370 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 16:57:57.371 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 16:57:57.371 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:57:59.078 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 16:57:59.078 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 16:57:59.082 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 16:57:59.082 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 16:57:59.083 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:57:59.084 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 16:57:59.084 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 16:57:59.088 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 16:57:59.088 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 16:57:59.088 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:57:59.089 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 16:57:59.090 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 16:57:59.092 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 16:57:59.092 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 16:57:59.092 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 16:57:59.093 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 16:57:59.093 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 16:57:59.096 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 16:57:59.096 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 16:57:59.097 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:00:53.024 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 17:00:53.024 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 17:00:53.027 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:00:53.027 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 17:00:53.028 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:00:53.029 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/allusers", parameters={}
2023-07-25 17:00:53.029 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#getAllUsers()
2023-07-25 17:00:53.032 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:00:53.033 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=699 (truncated)...]
2023-07-25 17:00:53.033 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:00:54.678 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 17:00:54.678 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 17:00:54.682 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 17:00:54.682 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 17:00:54.683 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:00:54.684 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 17:00:54.684 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 17:00:54.687 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 17:00:54.687 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 17:00:54.687 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:00:54.688 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 17:00:54.688 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 17:00:54.691 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 17:00:54.692 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 17:00:54.692 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:00:54.693 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/users/search/1", parameters={}
2023-07-25 17:00:54.693 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.UserController#searchUser(Long)
2023-07-25 17:00:54.695 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2023-07-25 17:00:54.695 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [UserDto(id=1, tinNumber=1121121, name=Kevin, lastname=Rosales, address=Zografou 23, phoneNumber=6993 (truncated)...]
2023-07-25 17:00:54.695 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:01:01.799 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:01:01.799 DEBUG SCY-LP-005 - [nio-8080-exec-9] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:01:01.804 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:01:01.805 DEBUG SCY-LP-005 - [nio-8080-exec-9] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:01:01.808 DEBUG SCY-LP-005 - [nio-8080-exec-9] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:01:01.809 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:01:01.809 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:01:01.815 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:01:01.815 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:01:01.818 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:03:00.280 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:03:00.280 DEBUG SCY-LP-005 - [nio-8080-exec-2] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:03:00.288 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:03:00.288 DEBUG SCY-LP-005 - [nio-8080-exec-2] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:03:00.292 DEBUG SCY-LP-005 - [nio-8080-exec-2] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:03:00.293 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:03:00.293 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:03:00.300 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:03:00.300 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:03:00.303 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:03:08.608 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:03:08.608 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:03:08.616 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:03:08.616 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:03:08.619 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:03:08.620 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:03:08.620 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:03:08.626 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:03:08.626 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:03:08.628 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:07:30.054 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:07:30.054 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:07:30.060 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:07:30.060 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:07:30.063 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:07:30.064 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:07:30.064 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:07:30.069 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:07:30.069 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:07:30.071 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:11:26.478 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:11:26.479 DEBUG SCY-LP-005 - [io-8080-exec-10] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:11:26.484 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:11:26.484 DEBUG SCY-LP-005 - [io-8080-exec-10] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:11:26.485 DEBUG SCY-LP-005 - [io-8080-exec-10] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:11:26.486 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:11:26.487 DEBUG SCY-LP-005 - [nio-8080-exec-1] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:11:26.492 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:11:26.492 DEBUG SCY-LP-005 - [nio-8080-exec-1] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:11:26.494 DEBUG SCY-LP-005 - [nio-8080-exec-1] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:13:56.877 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:13:56.877 DEBUG SCY-LP-005 - [nio-8080-exec-3] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:13:56.885 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:13:56.885 DEBUG SCY-LP-005 - [nio-8080-exec-3] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:13:56.888 DEBUG SCY-LP-005 - [nio-8080-exec-3] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:13:56.889 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:13:56.889 DEBUG SCY-LP-005 - [nio-8080-exec-4] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:13:56.894 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:13:56.895 DEBUG SCY-LP-005 - [nio-8080-exec-4] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:13:56.896 DEBUG SCY-LP-005 - [nio-8080-exec-4] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:14:07.735 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:14:07.736 DEBUG SCY-LP-005 - [nio-8080-exec-5] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:14:07.742 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:14:07.742 DEBUG SCY-LP-005 - [nio-8080-exec-5] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:14:07.744 DEBUG SCY-LP-005 - [nio-8080-exec-5] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:14:07.745 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:14:07.745 DEBUG SCY-LP-005 - [nio-8080-exec-6] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:14:07.752 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:14:07.752 DEBUG SCY-LP-005 - [nio-8080-exec-6] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:14:07.755 DEBUG SCY-LP-005 - [nio-8080-exec-6] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:14:20.257 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:14:20.257 DEBUG SCY-LP-005 - [nio-8080-exec-7] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:14:20.264 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:14:20.264 DEBUG SCY-LP-005 - [nio-8080-exec-7] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:14:20.267 DEBUG SCY-LP-005 - [nio-8080-exec-7] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:14:20.269 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : GET "/api/property/allproperties", parameters={}
2023-07-25 17:14:20.269 DEBUG SCY-LP-005 - [nio-8080-exec-8] [.m.m.a.RequestMappingHandlerMapping] : Mapped to com.scytalys.technikon.controller.PropertyController#fetchPropertyList()
2023-07-25 17:14:20.276 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2023-07-25 17:14:20.276 DEBUG SCY-LP-005 - [nio-8080-exec-8] [w.s.m.m.a.HttpEntityMethodProcessor] : Writing [[PropertyDto(id=3, pinNumber=123456789, address=Zografou 123, yearOfConstruction=2020, propertyType= (truncated)...]
2023-07-25 17:14:20.279 DEBUG SCY-LP-005 - [nio-8080-exec-8] [o.s.w.s.DispatcherServlet          ] : Completed 202 ACCEPTED
2023-07-25 17:18:18.592  INFO SCY-LP-005 - [ionShutdownHook] [alContainerEntityManagerFactoryBean] : Closing JPA EntityManagerFactory for persistence unit 'default'
